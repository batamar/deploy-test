{"version":3,"file":"static/chunks/pages/candidate-51d2dc9ea3fa55ac.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://_N_E/./node_modules/@mui/material/internal/SwitchBase.js","webpack://_N_E/?4c46","webpack://_N_E/./components/common/ClientsAutocomplete.tsx","webpack://_N_E/./components/candidateDetail/WorkHistoryForm.tsx","webpack://_N_E/./pages/candidate.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/candidate\",\n      function () {\n        return require(\"private-next-pages/candidate.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/candidate\"])\n      });\n    }\n  ","import React from 'react';\n\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material';\n\nimport { debounce } from '@mui/material/utils';\nimport { sendApiRequest } from 'lib/api/public';\n\nconst autocompleteService = { current: null };\n\ninterface Client {\n  name: string;\n}\n\nconst getClientsApiMethod = (search: string) => {\n    return sendApiRequest({ path: `/clients?search=${search}`, method: 'get' });\n}\n\nexport default function ClientsAutoComplete({ onSelect, disabled=false }) {\n  const [loading, setLoading] = React.useState(false);\n  const [value, setValue] = React.useState<Client | null>(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState<readonly Client[]>([]);\n\n  const fetch = React.useMemo(\n    () =>\n      debounce((request: { input: string }, callback: (results?: readonly Client[]) => void) => {\n        setLoading(true);\n\n        (autocompleteService.current as any).getClientsApiMethod(request.input).then((data) => {\n          setLoading(false);\n          callback(data.list);\n        });\n      }, 400),\n    [],\n  );\n\n  const setOptionsFromFetch = (results) => {\n    let newOptions: readonly Client[] = [];\n\n    if (value) {\n      newOptions = [value];\n    }\n\n    if (results) {\n      newOptions = [...newOptions, ...results];\n    }\n    setOptions(newOptions);\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current) {\n      autocompleteService.current = {\n        getClientsApiMethod,\n      };\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue }, (results?: readonly Client[]) => {\n      if (active) {\n        setOptionsFromFetch(results);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n\n  return (\n    <Autocomplete\n      isOptionEqualToValue={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      autoComplete\n      disabled={disabled}\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      noOptionsText=\"Type a client name ...\"\n      onChange={(_event, newValue: Client | null) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n\n        onSelect(newValue);\n      }}\n      onInputChange={(_event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          id=\"clients-auto-complete\"\n          {...params}\n          label=\"Select a client\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    FormLabel,\n    Grid,\n    IconButton,\n    MenuItem,\n    Select,\n    TextField,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ClientsAutoComplete from '../common/ClientsAutocomplete';\nimport notify from 'lib/notify';\nimport { sendApiRequest } from 'lib/api/public';\nimport { renderField } from '../utils';\n\ntype WorkHistory = {\n    _id: string,\n    title: string,\n    employer: string,\n    startDateMonth: number;\n    startDateYear: number;\n    endDateMonth: number;\n    endDateYear: number;\n    isCurrent: boolean;\n    locationState: string;\n    locationCity: string;\n    supervisorName: string;\n    supervisorPhone: string;\n    isVerified: boolean;\n    summary: string;\n}\n\ntype Props = {\n    onClose: () => void;\n    onSuccess: () => void;\n    candidateId: string;\n    workHistory?: WorkHistory;\n};\n\nconst dateSx = {\n    marginRight: '10px',\n\n    '& .MuiSelect-select': {\n        width: '40px',\n        padding: '8px', // Adjust padding as needed\n    },\n    '& .MuiOutlinedInput-input': {\n        width: '40px',\n        padding: '8px', // Adjust padding inside the input\n    },\n}\n\nconst years = [];\n\nfor (let i = 2024; i >= 1950; i--) {\n  years.push(i);\n}\n\nconst WorkHistoryForm = ({ candidateId, onClose, onSuccess, workHistory}: Props) => {\n    const obj = workHistory || {} as WorkHistory;\n\n    const [title, setTitle] = useState(obj.title);\n    const [employer, setEmployer] = useState(obj.employer);\n\n    const [startDateMonth, setStartDateMonth] = useState(obj.startDateMonth);\n    const [startDateYear, setStartDateYear] = useState(obj.startDateYear);\n    const [endDateMonth, setEndDateMonth] = useState(obj.endDateMonth);\n    const [endDateYear, setEndDateYear] = useState(obj.endDateYear);\n\n    const [isCurrent, setIsCurrent] = useState(obj.isCurrent);\n    const [locationState, setLocationState] = useState(obj.locationState);\n    const [locationCity, setLocationCity] = useState(obj.locationCity);\n    const [supervisorName, setSupervisorName] = useState(obj.supervisorName);\n    const [supervisorPhone, setSupervisorPhone] = useState(obj.supervisorPhone);\n    const [isVerified, setIsVerified] = useState(obj.isVerified);\n    const [summary, setSummary] = useState(obj.summary);\n\n    const [saving, setSaving] = useState(false);\n\n    const onSave = async () => {\n        setSaving(true);\n\n        try {\n            await sendApiRequest({\n                path: '/candidates/create-or-update-work-history',\n                method: 'POST',\n                data: {\n                    candidateId,\n                    _id: obj._id,\n                    title,\n                    employer,\n                    startDateMonth,\n                    startDateYear,\n                    endDateMonth,\n                    endDateYear,\n                    isCurrent,\n                    locationState,\n                    locationCity,\n                    supervisorName,\n                    supervisorPhone,\n                    isVerified,\n                    summary\n                }\n            });\n\n            onSuccess();\n\n            setSaving(false);\n        } catch (error) {\n            notify(error);\n        }\n\n    };\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"modal-title\" maxWidth=\"lg\" open>\n            <DialogTitle id=\"modal-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{ obj.title ? 'Edit Work History' : 'Add Work History'}</Box>\n                    <Box>\n                        <IconButton onClick={onClose}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={saving}>\n                            Save\n                        </Button>\n                    </Box>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent sx={{ minWidth: '700px' }}>\n                <br />\n\n                {renderField({ label: 'Title', renderControl: () => \n                    <TextField value={title} onChange={(e) => setTitle(e.target.value)} fullWidth />\n                })}\n\n                {renderField({ label: 'Employer', renderControl: () => {\n                    return (\n                        <div style={{ flex: 4 }}>\n                            <span>{obj.employer}</span>\n                            <ClientsAutoComplete\n                                onSelect={(company) => setEmployer(company && company.name)}\n                            />\n                        </div>\n                    )\n                }, isCompact: true})}\n\n                <Grid container>\n                    <Grid item flex={1}>\n                        <FormLabel sx={{ color: '#000', fontWeight: 'bold' }}>Start/End Dates</FormLabel>\n                    </Grid>\n                    <Grid item flex={4}>\n                        <Grid container alignItems=\"center\">\n                                <Select defaultValue={startDateMonth} sx={dateSx} onChange={(e) => { setStartDateMonth(e.target.value as number); }}>\n                                    {[1,2,3,4,5,6,7,8,9,10,11,12].map((value) => {\n                                        return (\n                                            <MenuItem key={value} value={value}>{value}</MenuItem>\n                                        )\n                                    })}\n                                </Select>\n\n                                <Select defaultValue={startDateYear} sx={dateSx} onChange={(e) => { setStartDateYear(e.target.value as number); }}>\n                                    {years.map((value) => {\n                                        return (\n                                            <MenuItem key={value} value={value}>{value}</MenuItem>\n                                        )\n                                    })}\n                                </Select>\n\n                                <span>-</span>\n\n                                {\n                                    isCurrent ? null : (\n                                        <>\n                                            <Select defaultValue={endDateMonth} sx={{ ...dateSx, marginLeft: '10px' }} onChange={(e) => { setEndDateMonth(e.target.value as number); }}>\n                                                {[1,2,3,4,5,6,7,8,9,10,11,12].map((value) => {\n                                                    return (\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n\n                                            <Select defaultValue={endDateYear} sx={dateSx} onChange={(e) => { setEndDateYear(e.target.value as number); }}>\n                                                {years.map((value) => {\n                                                    return (\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n                                        </>\n                                    )\n                                }\n\n                                <Checkbox\n                                    defaultChecked={isCurrent}\n                                    onChange={(e) => setIsCurrent(e.target.checked)}\n                                />\n\n                                <FormLabel>Current</FormLabel>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <br /><br />\n\n                <Grid container>\n                    <Grid item flex={1}>\n                        <FormLabel sx={{ color: '#000', fontWeight: 'bold' }}>Location</FormLabel>\n                    </Grid>\n                    <Grid item flex={4}>\n                        <Grid container>\n                            <TextField\n                                sx={{ marginRight: '10px' }}\n                                label=\"City\"\n                                defaultValue={locationCity}\n                                onChange={(e) => {\n                                    setLocationCity(e.target.value);\n                                }}\n                            />\n\n                            <TextField\n                                label=\"State\"\n                                defaultValue={locationState}\n                                onChange={(e) => {\n                                    setLocationState(e.target.value);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <br /><br />\n\n                <Grid container>\n                    <Grid item flex={1}>\n                        <FormLabel sx={{ color: '#000', fontWeight: 'bold' }}>Supervisor</FormLabel>\n                    </Grid>\n                    <Grid item flex={4}>\n                        <Grid container>\n                            <TextField\n                                sx={{ marginRight: '10px' }}\n                                label=\"Name\"\n                                defaultValue={supervisorName}\n                                onChange={(e) => {\n                                    setSupervisorName(e.target.value);\n                                }}\n                            />\n\n                            <TextField\n                                label=\"Phone\"\n                                defaultValue={supervisorPhone}\n                                onChange={(e) => {\n                                    setSupervisorPhone(e.target.value);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <br /><br />\n\n                {renderField({ label: 'Verified', renderControl: () => \n                    <Checkbox defaultChecked={isVerified} onChange={(e) => setIsVerified(e.target.checked)} />\n                })}\n\n                {renderField({ label: 'Summary', renderControl: () => {\n                    return (\n                        <TextField multiline value={summary} minRows={5} onChange={(e) => setSummary(e.target.value)} fullWidth />\n                    )\n                }})}\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default WorkHistoryForm;\n","import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteButton from '../components/common/DeleteButton';\nimport AuthLayout from '../components/AuthLayout';\nimport WorkHistoryForm from '../components/candidateDetail/WorkHistoryForm';\nimport { Paper, Grid, Button, TableContainer, Table, TableCell, TableBody, TableRow } from '@mui/material';\nimport { sendApiRequest } from '../lib/api/public';\nimport confirm from '../lib/confirm';\nimport { updateField as updateFieldCommon } from '../components/candidateDetail/utils';\nimport Feed from '../components/candidateDetail/Feed';\nimport Jobs from '../components/candidateDetail/Jobs';\nimport PrimaryInfo from '../components/candidateDetail/PrimaryInfo';\nimport Notes from '../components/candidateDetail/Notes';\nimport Attachments from '../components/candidateDetail/Attachments';\nimport SendEmail from '../components/SendEmail';\n\nconst Candidate = () => {\n  const router = useRouter();\n\n  const [isLoading, setLoading] = useState(false);\n  const [feedUpdateHash, setFeedUpdateHash] = useState('');\n\n  const [editingWorkHistory, setEditingWorkHistory] = useState(null);\n  const [showWorkHistoryForm, setShowWorkHistoryForm] = useState(false);\n  const [candidate, setCandidate] = useState<any>();\n\n  const getCandidate = () => {\n    if (router.isReady) {\n      const { query } = router;\n\n      setLoading(true);\n\n      sendApiRequest({\n        path: `/candidates/detail?_id=${query.id}`,\n        method: 'GET',\n      }).then((response: any) => {\n        setLoading(false);\n\n        if (!response.error) {\n          setCandidate(response);\n        }\n      }).catch((_error) => {\n        setLoading(false);\n      });\n    }\n  }\n\n  const { id } = router.query;\n\n  useEffect(() => {\n    getCandidate();\n  }, [id])\n\n \n  const updateField = (data, callback?) =>\n      updateFieldCommon(candidate, data, getCandidate, callback);\n\n  const removeWorkHistory = (_id: string) => {\n    updateField({\n      type: 'remove-work-history',\n      value: _id,\n    })\n  }\n\n  const renderWorkHistoryForm = () => {\n    if (!showWorkHistoryForm) {\n      return null;\n    }\n\n    return <WorkHistoryForm\n      onClose={() => setShowWorkHistoryForm(false)}\n      candidateId={candidate._id}\n      workHistory={editingWorkHistory}\n      onSuccess={() => { setShowWorkHistoryForm(false); getCandidate(); }}\n    />\n  }\n\n  if (!candidate) {\n    return <AuthLayout title={''} isLoading={isLoading}>{' '}</AuthLayout>\n  }\n\n  const paperStyle = { padding: '10px 20px', marginBottom: '20px', marginRight: '10px' }\n\n  const renderWorkHistories = () => {\n    return (\n         <Paper sx={paperStyle}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n              <Grid item><h3>Work histories</h3></Grid>\n              <Grid item>\n                <Button\n                  size='small'\n                  onClick={() => {\n                    setShowWorkHistoryForm(true);\n                    setEditingWorkHistory(null);\n                  }}\n                  variant=\"contained\">\n                  Add Work History\n                </Button>\n              </Grid>\n            </Grid>\n\n            <TableContainer component={Paper}>\n              <Table>\n                <TableBody>\n                  {(candidate.workHistories || []).map((history, index) => (\n                    <TableRow\n                      key={index}\n                    >\n                      <TableCell>{history.title}</TableCell>\n                      <TableCell>{history.employer}</TableCell>\n                      <TableCell>{history.startDateMonth}/{history.startDateYear} - {history.isCurrent ? 'Current' : `${history.endDateMonth}/${history.endDateYear}`}</TableCell>\n                      <TableCell>\n                        <div style={{ marginRight: '10px' }}>\n                          <EditIcon\n                            sx={{ cursor: 'pointer' }}\n                            onClick={() => {\n                              setEditingWorkHistory(history);\n                              setShowWorkHistoryForm(true);\n                            }}\n                          />\n\n                          <DeleteButton\n                            onClick={() => {\n                              confirm({\n                                title: 'Confirmation',\n                                message: 'Are you sure to delete ?',\n                                onAnswer: (answer) => {\n                                  if (answer) {\n                                    removeWorkHistory(history._id);\n                                  }\n                                }\n                              })\n                            }}\n                          />\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n    )\n  }\n\n  return (\n    <AuthLayout\n      title={\n        <Grid container>\n          {candidate.firstName} {candidate.lastName}\n        </Grid>\n      }\n      isLoading={isLoading}\n    >\n\n      {renderWorkHistoryForm()}\n\n      <Grid container flexDirection=\"row\">\n        <Grid item flex={1}>\n          <Paper sx={{ ...paperStyle }}>\n            <h3>Primary</h3>\n\n            <br />\n\n            <PrimaryInfo candidate={candidate} onChange={() => {\n                getCandidate();\n              }} />\n          </Paper>\n\n          <Paper sx={{ ...paperStyle, height: '500px' }}>\n            <Notes candidate={candidate} onChange={() => {\n                getCandidate();\n              }} />\n          </Paper>\n\n          {renderWorkHistories()}\n\n          <Paper sx={paperStyle}>\n            <Jobs candidate={candidate} onChange={() => {\n              setFeedUpdateHash(Math.random().toString())\n            }} />\n          </Paper>\n\n          <Paper sx={paperStyle}>\n            <Attachments candidate={candidate} onChange={() => {\n              getCandidate();\n            }} />\n          </Paper>\n\n          <Paper sx={paperStyle}>\n            <h3>Send Email</h3>\n\n            <br />\n\n            <SendEmail\n              jobId={(candidate.jobIds || []).length > 0 ? candidate.jobIds[0] : undefined}\n              candidateId={candidate._id}\n              to={(candidate.emails || []).map((email) => email.email).join(',')}\n            />\n          </Paper>\n\n        </Grid>\n\n        <Grid item flex={1}>\n          <Paper sx={paperStyle}>\n            <h3>Feed</h3>\n\n            <Feed candidateId={id as string} updateHash={feedUpdateHash} />\n          </Paper>\n        </Grid>\n      </Grid>\n \n    </AuthLayout>\n  );\n};\n\nexport default Candidate;\n"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","ZP","generateUtilityClasses","Z","_excluded","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","capitalize","input","composeClasses","SwitchBaseRoot","styled","ButtonBase","esm_extends","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","internal_SwitchBase","react","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","objectWithoutPropertiesLoose","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","jsx_runtime","jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","jsx","nativeEvent","defaultPrevented","newChecked","target","window","__NEXT_P","push","__webpack_require__","autocompleteService","current","getClientsApiMethod","sendApiRequest","path","concat","search","method","ClientsAutoComplete","param","onSelect","loading","setLoading","React","setValue","inputValue","setInputValue","options","setOptions","fetch","debounce","request","callback","then","data","list","setOptionsFromFetch","newOptions","results","active","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Autocomplete","isOptionEqualToValue","option","getOptionLabel","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","_event","newValue","onInputChange","newInputValue","renderInput","TextField","params","label","InputProps","endAdornment","CircularProgress","color","dateSx","years","i","candidateDetail_WorkHistoryForm","candidateId","onClose","onSuccess","workHistory","obj","title","setTitle","useState","employer","setEmployer","startDateMonth","setStartDateMonth","startDateYear","setStartDateYear","endDateMonth","setEndDateMonth","endDateYear","setEndDateYear","isCurrent","setIsCurrent","locationState","setLocationState","locationCity","setLocationCity","supervisorName","setSupervisorName","supervisorPhone","setSupervisorPhone","isVerified","setIsVerified","summary","setSummary","saving","setSaving","onSave","_id","error","notify","Dialog","aria-labelledby","maxWidth","open","DialogTitle","Box","display","alignItems","flexGrow","IconButton","onClick","CloseIcon","Button","variant","DialogContent","sx","minWidth","br","renderField","renderControl","e","fullWidth","div","style","flex","span","company","isCompact","Grid","container","item","FormLabel","fontWeight","Select","defaultValue","map","MenuItem","Fragment","Checkbox","multiline","minRows","candidate","router","useRouter","isLoading","feedUpdateHash","setFeedUpdateHash","editingWorkHistory","setEditingWorkHistory","showWorkHistoryForm","setShowWorkHistoryForm","setCandidate","getCandidate","isReady","query","response","catch","useEffect","updateField","updateFieldCommon","removeWorkHistory","AuthLayout","paperStyle","marginBottom","firstName","lastName","WorkHistoryForm","flexDirection","Paper","h3","PrimaryInfo","Notes","justifyContent","TableContainer","Table","TableBody","workHistories","history","index","TableRow","TableCell","EditIcon","DeleteButton","confirm","message","onAnswer","answer","Jobs","Math","random","toString","Attachments","SendEmail","jobId","jobIds","length","to","emails","email","join","Feed","updateHash"],"sourceRoot":""}