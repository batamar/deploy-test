{"version":3,"file":"static/chunks/pages/settings/manage-prompts-58306b77f167b179.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/TableContainer/tableContainerClasses.js","webpack://_N_E/./node_modules/@mui/material/TableContainer/TableContainer.js","webpack://_N_E/./node_modules/@mui/material/TableHead/tableHeadClasses.js","webpack://_N_E/./node_modules/@mui/material/TableHead/TableHead.js","webpack://_N_E/?775f","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./lib/confirm.ts","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./pages/settings/PromptForm.tsx","webpack://_N_E/./pages/settings/manage-prompts.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/manage-prompts\",\n      function () {\n        return require(\"private-next-pages/settings/manage-prompts.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/manage-prompts\"])\n      });\n    }\n  ","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import { openConfirmDialogExternal } from '../components/common/Confirmer';\n\nexport default function confirm({\n  title,\n  message,\n  onAnswer,\n}: {\n  title: string;\n  message: string;\n  onAnswer: (answer) => void;\n}) {\n  openConfirmDialogExternal({ title, message, onAnswer });\n}\n","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import React, { useState } from 'react';\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport notify from 'lib/notify';\nimport { sendApiRequest } from 'lib/api/public';\nimport { renderField } from '../../components/utils';\n\ntype Props = {\n    onClose: () => void;\n    onSuccess: () => void;\n    open: boolean;\n    prompt?: {\n        _id: string,\n        name: string,\n        system: string;\n        user: string;\n    }\n};\n\nconst PromptForm = ({ open, onClose, onSuccess, prompt }: Props) => {\n    const promptO = prompt || { _id: null, system: '', user: '', name: '', prompt: '' };\n\n    const [system, setSystem] = useState(promptO.system);\n    const [user, setUser] = useState(promptO.user);\n    const [name, setName] = useState(promptO.name);\n    const [saving, setSaving] = useState(false);\n\n    const onSave = async () => {\n        setSaving(true);\n\n        try {\n            await sendApiRequest({\n                path: '/prompts/manage',\n                method: 'POST',\n                data: {\n                    _id: promptO._id,\n                    system,\n                    user,\n                    name,\n                }\n            });\n\n            onSuccess();\n\n            setSaving(false);\n        } catch (error) {\n            setSaving(false);\n            notify(error);\n        }\n\n    };\n\n    const renderSingleField = (value: string, label: string, onChange, type?: string, multiline?: boolean, minRows?: number) => {\n        return (\n            <>\n                {renderField({ label, renderControl: () => {\n                    return <TextField fullWidth value={value} onChange={(e) => onChange(e.target.value)} type={type} multiline={multiline} minRows={minRows} />\n                }})}\n            </>\n        )\n    }\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"modal-title\" open={open} fullScreen style={{ width: '60%', left: 'inherit' }}>\n            <DialogTitle id=\"modal-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{ promptO._id ? 'Edit prompt' : 'Create a new prompt'}</Box>\n                    <Box>\n                        <IconButton onClick={onClose}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={saving}>\n                            Save\n                        </Button>\n                    </Box>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent style={{ backgroundColor: '#f8f8f8' }}>\n                <br />\n\n                {renderSingleField(name, 'Name', setName)}\n                {renderSingleField(system, 'System', setSystem, 'textarea', true, 10)}\n                {renderSingleField(user, 'User', setUser, 'textarea', true, 10)}\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default PromptForm;\n","import React, { useEffect, useState } from 'react';\nimport AuthLayout from '../../components/AuthLayout';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { sendApiRequest } from '../../lib/api/public';\nimport notify from '../../lib/notify';\nimport PromptForm from './PromptForm';\nimport confirm from 'lib/confirm';\n\nconst ManagePrompts = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [prompts, setPrompts] = useState([]);\n  const [prompt, setPrompt] = useState(null);\n\n  const [showPromptForm, setShowPromptForm] = useState(false);\n\n  const getPrompts = () => {\n    setLoading(true);\n\n    sendApiRequest({\n      path: `/prompts`,\n      method: 'GET',\n    }).then((response: any) => {\n      setLoading(false);\n\n      if (!response.error) {\n        setPrompts(response);\n      }\n    })\n  }\n\n  const deletePrompt = async (promptId: string) => {\n    setLoading(true);\n\n    try {\n      await sendApiRequest({\n        path: `/prompts/manage`,\n        method: 'POST',\n        data: {\n          action: 'remove',\n          _id: promptId,\n        }\n      });\n\n      setLoading(false);\n      getPrompts();\n    } catch (error) {\n      notify(error);\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    getPrompts();\n  }, [])\n\n  const renderUserForm = () => {\n    if (!showPromptForm) {\n      return null;\n    }\n\n    return (\n      <PromptForm\n        prompt={prompt}\n        open={showPromptForm}\n        onClose={() => setShowPromptForm(false)}\n        onSuccess={() => { setShowPromptForm(false); getPrompts(); }}\n      />\n    )\n  }\n\n  return (\n    <AuthLayout title='Manage prompts' isLoading={isLoading}>\n      <div\n        style={{\n          float: 'right',\n        }}\n      >\n        <Button\n          onClick={() => { setShowPromptForm(true); setPrompt(null) }}\n          variant=\"contained\"\n        >\n          + Add prompt\n        </Button>\n      </div>\n\n      <div style={{ clear: 'both' }} />\n\n      <br />\n\n      {renderUserForm()}\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>System</TableCell>\n              <TableCell>User</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {prompts.map((prompt, index) => (\n              <TableRow\n                key={prompt._id}\n              >\n                <TableCell>{index + 1}</TableCell>\n                <TableCell>\n                  {prompt.name}\n                </TableCell>\n                <TableCell>{prompt.system.slice(0, 50) + (prompt.system.length > 50 ? '...' : '')}</TableCell>\n                <TableCell>{prompt.user.slice(0, 50) + (prompt.user.length > 50 ? '...' : '')}</TableCell>\n                <TableCell sx={{ textAlign: 'right' }}>\n                  <Button variant=\"contained\" color='inherit' onClick={() => { setShowPromptForm(true); setPrompt(prompt); }}>Edit</Button>\n                  {' '}\n                  <Button variant=\"contained\" color=\"error\" onClick={() => {\n                    confirm({ title: 'Are you sure to delete', message: 'This action cannot be undone', onAnswer: async (answer) => {\n                      if (answer) {\n                        deletePrompt(prompt._id);\n                      }\n                    } })\n                  }}>Delete</Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </AuthLayout>\n  );\n};\n\nexport default ManagePrompts;"],"names":["getTableContainerUtilityClass","slot","generateUtilityClass","ZP","generateUtilityClasses","Z","_excluded","useUtilityClasses","ownerState","classes","composeClasses","root","TableContainerRoot","styled","name","overridesResolver","props","styles","width","overflowX","TableContainer_TableContainer","react","forwardRef","inProps","ref","useThemeProps","className","component","other","objectWithoutPropertiesLoose","esm_extends","jsx_runtime","jsx","as","clsx","getTableHeadUtilityClass","TableHeadRoot","display","tablelvl2","variant","defaultComponent","TableHead_TableHead","Tablelvl2Context","Provider","value","children","role","window","__NEXT_P","push","__webpack_require__","renderField","label","renderControl","isCompact","required","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Grid","container","item","flex","id","concat","FormLabel","sx","color","fontWeight","br","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","onChange","event","query","marginTop","justifyContent","capitalize","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","backgroundColor","job","status","includes","span","style","borderRadius","padding","renderClientStatus","client","renderDetailItem","confirm","title","message","onAnswer","openConfirmDialogExternal","notify","obj","openSnackbarExternal","toString","__webpack_exports__","open","onClose","onSuccess","prompt","promptO","_id","system","user","setSystem","useState","setUser","setName","saving","setSaving","onSave","sendApiRequest","path","method","data","error","renderSingleField","type","multiline","minRows","TextField","fullWidth","e","target","Dialog","aria-labelledby","fullScreen","left","DialogTitle","Box","alignItems","flexGrow","IconButton","onClick","CloseIcon","Button","disabled","DialogContent","isLoading","setLoading","prompts","setPrompts","setPrompt","showPromptForm","setShowPromptForm","getPrompts","then","response","deletePrompt","promptId","action","useEffect","AuthLayout","div","float","clear","PromptForm","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","map","index","length","textAlign","answer"],"sourceRoot":""}