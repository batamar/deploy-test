{"version":3,"file":"static/chunks/pages/settings/users-8e8f468bfe68777d.js","mappings":"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","sources":["webpack://_N_E/?69b6","webpack://_N_E/./lib/confirm.ts","webpack://_N_E/./pages/settings/users.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/users\",\n      function () {\n        return require(\"private-next-pages/settings/users.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/users\"])\n      });\n    }\n  ","import { openConfirmDialogExternal } from '../components/common/Confirmer';\n\nexport default function confirm({\n  title,\n  message,\n  onAnswer,\n}: {\n  title: string;\n  message: string;\n  onAnswer: (answer) => void;\n}) {\n  openConfirmDialogExternal({ title, message, onAnswer });\n}\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport AuthLayout from '../../components/AuthLayout';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { sendApiRequest } from '../../lib/api/public';\nimport notify from '../../lib/notify';\nimport UserForm from './UserForm';\nimport confirm from 'lib/confirm';\n\nconst Users = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState(null);\n\n  const [showUserForm, setShowUserForm] = useState(false);\n\n  const getUsers = () => {\n    setLoading(true);\n\n    sendApiRequest({\n      path: `/users`,\n      method: 'GET',\n    }).then((response: any) => {\n      setLoading(false);\n\n      if (!response.error) {\n        setUsers(response);\n      }\n    })\n  }\n\n  const deleteUser = async (userId: string) => {\n    setLoading(true);\n\n    try {\n      await sendApiRequest({\n        path: '/users/manage',\n        method: 'POST',\n        data: {\n          action: 'remove',\n          _id: userId,\n        }\n      });\n\n      setLoading(false);\n      getUsers();\n    } catch (error) {\n      notify(error);\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [])\n\n  const renderUserForm = () => {\n    if (!showUserForm) {\n      return null;\n    }\n\n    return (\n      <UserForm\n        user={user}\n        open={showUserForm}\n        onClose={() => setShowUserForm(false)}\n        onSuccess={() => { setShowUserForm(false); getUsers(); }}\n      />\n    )\n  }\n\n  return (\n    <AuthLayout title='Users' isLoading={isLoading}>\n      <div\n        style={{\n          float: 'right',\n        }}\n      >\n        <Button\n          onClick={() => { setShowUserForm(true); setUser(null) }}\n          variant=\"contained\"\n        >\n          + Add user\n        </Button>\n      </div>\n\n      <div style={{ clear: 'both' }} />\n\n      <br />\n\n      {renderUserForm()}\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Phone</TableCell>\n              <TableCell>Last login</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user, index) => (\n              <TableRow\n                key={user._id}\n              >\n                <TableCell>{index + 1}</TableCell>\n                <TableCell>\n                  {user.firstName} {user.lastName}\n                </TableCell>\n                <TableCell>{user.role}</TableCell>\n                <TableCell>{user.title}</TableCell>\n                <TableCell>{user.email}</TableCell>\n                <TableCell>{user.phone}</TableCell>\n                <TableCell>{user.lastLoginAt ? moment(user.lastLoginAt).format('MM-DD-YYYY hh:mm a') : 'N/A'}</TableCell>\n                <TableCell sx={{ textAlign: 'right' }}>\n                  <Button variant=\"contained\" color='inherit' onClick={() => { setShowUserForm(true); setUser(user); }}>Edit</Button>\n                  {' '}\n                  <Button variant=\"contained\" color=\"error\" onClick={() => {\n                    confirm({ title: 'Are you sure to delete', message: 'This action cannot be undone', onAnswer: async (answer) => {\n                      if (answer) {\n                        deleteUser(user._id);\n                      }\n                    } })\n                  }}>Delete</Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </AuthLayout>\n  );\n};\n\nexport default Users;"],"names":["window","__NEXT_P","push","__webpack_require__","confirm","param","title","message","onAnswer","openConfirmDialogExternal","__webpack_exports__","isLoading","setLoading","useState","users","setUsers","user","setUser","showUserForm","setShowUserForm","getUsers","sendApiRequest","path","method","then","response","error","deleteUser","userId","data","action","_id","notify","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","AuthLayout","jsx","div","style","float","Button","onClick","variant","clear","br","UserForm","open","onClose","onSuccess","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","map","index","firstName","lastName","role","email","phone","lastLoginAt","moment","format","textAlign","color","answer"],"sourceRoot":""}