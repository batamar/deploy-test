{"version":3,"file":"static/chunks/pages/settings/StatusForm-06cd274f1070b63d.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/Close.js","webpack://_N_E/./node_modules/@mui/material/IconButton/iconButtonClasses.js","webpack://_N_E/./node_modules/@mui/material/IconButton/IconButton.js","webpack://_N_E/?51a3","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./pages/settings/StatusForm.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other, {\n    ownerState: ownerState,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/StatusForm\",\n      function () {\n        return require(\"private-next-pages/settings/StatusForm.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/StatusForm\"])\n      });\n    }\n  ","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import React, { useState } from 'react';\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { TwitterPicker } from 'react-color';\nimport notify from 'lib/notify';\nimport { sendApiRequest } from 'lib/api/public';\nimport { renderField } from '../../components/utils';\n\ntype Props = {\n    onClose: () => void;\n    onSuccess: () => void;\n    open: boolean;\n    status?: {\n        _id: string,\n        name: string,\n        color: string,\n    }\n};\n\nconst StatusForm = ({ open, onClose, onSuccess, status }: Props) => {\n    const statusO = status || { _id: null, name: '', color: '' };\n\n    const [name, setName] = useState(statusO.name);\n    const [color, setColor] = useState(statusO.color);\n    const [saving, setSaving] = useState(false);\n\n    const onSave = async () => {\n        if (!name || !color) {\n            notify('Please fill the required fields');\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await sendApiRequest({\n                path: '/candidates/statuses/manage',\n                method: 'POST',\n                data: {\n                    _id: statusO._id,\n                    name,\n                    color\n                }\n            });\n\n            onSuccess();\n\n            setSaving(false);\n        } catch (error) {\n            setSaving(false);\n            notify(error);\n        }\n\n    };\n\n    const renderSingleField = (value: string, label: string, onChange, required=false) => {\n        return (\n            <>\n                {renderField({ label, required, renderControl: () => {\n                    return <TextField fullWidth value={value} onChange={(e) => onChange(e.target.value)} />\n                }})}\n            </>\n        )\n    }\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"modal-title\" open={open} PaperProps={{ sx: { width: '100%' }}}>\n            <DialogTitle id=\"modal-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{ statusO.name ? 'Edit status' : 'Create a new status'}</Box>\n                    <Box>\n                        <IconButton onClick={onClose}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={saving}>\n                            Save\n                        </Button>\n                    </Box>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent style={{ backgroundColor: '#f8f8f8' }}>\n                <br />\n\n                {renderSingleField(name, 'Title', setName, true)}\n\n                {renderField({ label: 'Color', required: true, renderControl: () => {\n                     return <TwitterPicker color={color} onChangeComplete={(e) => {\n                        setColor(e.hex)\n                     }} />\n                }})}\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default StatusForm;\n"],"names":["_interopRequireDefault","__webpack_require__","exports","Z","_createSvgIcon","_jsxRuntime","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","ZP","iconButtonClasses","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","disabled","color","edge","size","slots","root","capitalize","composeClasses","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","theme","esm_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","colorManipulator","Fq","marginLeft","marginRight","_palette","main","mainChannel","IconButton_iconButtonClasses","IconButton_IconButton","react","forwardRef","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","objectWithoutPropertiesLoose","jsx_runtime","clsx","centerRipple","focusRipple","window","__NEXT_P","push","renderField","label","renderControl","isCompact","required","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Grid","container","item","id","concat","FormLabel","sx","fontWeight","br","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","onChange","event","value","query","marginTop","display","justifyContent","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","job","status","includes","span","style","width","renderClientStatus","client","renderDetailItem","notify","obj","openSnackbarExternal","message","toString","__webpack_exports__","open","onClose","onSuccess","statusO","_id","setName","useState","setColor","saving","setSaving","onSave","sendApiRequest","path","method","data","error","Dialog","aria-labelledby","PaperProps","DialogTitle","Box","alignItems","flexGrow","IconButton","onClick","CloseIcon","Button","variant","DialogContent","renderSingleField","TextField","fullWidth","e","target","TwitterPicker","onChangeComplete","hex"],"sourceRoot":""}