{"version":3,"file":"static/chunks/pages/settings-1c6b957dd56a19b8.js","mappings":"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","sources":["webpack://_N_E/?9f0e","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./lib/confirm.ts","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./pages/settings/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings\",\n      function () {\n        return require(\"private-next-pages/settings/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings\"])\n      });\n    }\n  ","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import { openConfirmDialogExternal } from '../components/common/Confirmer';\n\nexport default function confirm({\n  title,\n  message,\n  onAnswer,\n}: {\n  title: string;\n  message: string;\n  onAnswer: (answer) => void;\n}) {\n  openConfirmDialogExternal({ title, message, onAnswer });\n}\n","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { renderField } from 'components/utils';\nimport AuthLayout from '../../components/AuthLayout';\nimport { Box, Table, TableBody, TableCell, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, Checkbox, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { useSession } from 'components/SessionContext';\nimport { sendApiRequest } from '../../lib/api/public';\nimport notify from 'lib/notify';\nimport confirm from 'lib/confirm';\nimport { getUrlApp } from 'lib/api/public';\n\nconst Settings = () => {\n  const [calendarIntegration, setCalendarIntegration] = useState(null);\n  const [meetingSchedulerIntegration, setMeetingSchedulerIntegration] = useState(null);\n  const [showMSForm, setShowMSForm] = useState(false);\n  const [username, setUsername] = useState('');\n  const [days, setDays] = useState({});\n  const [saving, setSaving] = useState(false);\n  const { user, loadingUser } = useSession();\n  const [copiedIntegrationLink, setCopiedIntegrationLink] = useState(false);\n\n  const isSystemAdmin = !loadingUser && user.role === 'systemAdmin';\n  const isSuperAdmin = !loadingUser && user.role === 'superAdmin';\n\n  const getIntegrations = () => {\n    sendApiRequest({\n      path: '/users/get-integrations-by-user',\n      method: 'GET'\n    }).then((res) => {\n      setCalendarIntegration(res.find((integration) => integration.type === 'calendar'));\n\n      const msIntegration = res.find((integration) => integration.type === 'meeting-scheduler');\n\n      setMeetingSchedulerIntegration(msIntegration);\n\n      if (msIntegration) {\n        setUsername(msIntegration.data.username);\n        setDays(msIntegration.data.days);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getIntegrations();\n  }, []);\n\n  const toggleDay = (day, checked) => {\n    setDays({ ...days, [day]: checked });\n  };\n\n  const onFromTimeChange = (day) => (e) => {\n    setDays({ ...days, [day]: { ...days[day], from: e.target.value } });\n  };\n\n  const onToTimeChange = (day) => (e) => {\n    setDays({ ...days, [day]: { ...days[day], to: e.target.value } });\n  };\n\n  const onSave = () => {\n    if (!username) {\n      notify('Username is required');\n      return;\n    }\n\n    setSaving(true);\n\n    sendApiRequest({\n      path: '/integrations/configure',\n      method: 'POST',\n      data: {\n        _id: meetingSchedulerIntegration ? meetingSchedulerIntegration._id : undefined,\n        type: 'meeting-scheduler',\n        data: {\n          username,\n          days\n        }\n      }\n    }).then(() => {\n      setShowMSForm(false);\n      notify('Success');\n      getIntegrations();\n    }).catch((err) => {\n      notify(err.message);\n    }).finally(() => {\n      setSaving(false);\n    });\n  };\n\n  const deleteCalendarIntegration = () => {\n    sendApiRequest({\n      path: '/integrations/delete',\n      method: 'POST',\n      data: {\n        type: 'calendar'\n      }\n    }).then(() => {\n      setCalendarIntegration(null);\n      notify('Success');\n    });\n  };\n\n  const renderMSForm = () => {\n    if (!showMSForm) {\n      return null;\n    }\n\n    return (\n      <Dialog open={showMSForm} onClose={() => setShowMSForm(false)} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>\n          <Box display=\"flex\" alignItems=\"center\">\n              <Box flexGrow={1} >Configure Meeting scheduler</Box>\n              <Box>\n                  <IconButton onClick={() => setShowMSForm(false)}>\n                      <CloseIcon />\n                  </IconButton>\n\n                  <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={saving}>\n                      {saving ? 'Saving...' : 'Save'}\n                  </Button>\n              </Box>\n          </Box>\n        </DialogTitle>\n\n        <DialogContent style={{ backgroundColor: '#f8f8f8' }}>\n          <br />\n\n          <DialogContentText>\n            Create and share a custom meeting link to make scheduling simple.\n          </DialogContentText>\n\n          <br />\n\n          {renderField({ label: 'Custom Meeting Link', required: true, renderControl: () => {\n            return (\n              <>\n                <TextField\n                  disabled\n                  value={`${getUrlApp()}/meetings/`}\n                  sx={{ width: '40%', backgroundColor: '#ebebeb' }}\n                  inputProps={{\n                    sx: {\n                      borderRight: 'none',\n                    }\n                  }}\n                />\n\n                <TextField\n                  value={username}\n                  label=\"Username\"\n                  sx={{ width: '30%' }}\n                  onChange={(e) => setUsername(e.target.value)}\n                  inputProps={{\n                    sx: {\n                      borderLeft: 'none',\n                    }\n                  }}\n                />\n              </>\n            )\n          }})}\n\n          {renderField({ label: 'Availability', renderControl: () => {\n            return (\n              [\n                { value: 0, label: 'Sunday' },\n                { value: 1, label: 'Monday' },\n                { value: 2, label: 'Tuesday' },\n                { value: 3, label: 'Wednesday' },\n                { value: 4, label: 'Thursday' },\n                { value: 5, label: 'Friday' },\n                { value: 6, label: 'Saturday' }\n              ].map((day) => {\n                const disabled = !days[day.value];\n                const data = days[day.value] || {};\n\n                return (\n                  <div key={day.value} style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginBottom: '10px' }}>\n                    <div style={{ width: '150px' }}>\n                      <Checkbox checked={days[day.value]} onChange={(e) => toggleDay(day.value, e.target.checked)} />\n                      {day.label}\n                    </div>\n\n                    <TextField\n                      type=\"time\"\n                      value={data.from}\n                      sx={{ marginRight: '10px', backgroundColor: disabled ? '#ebebeb' : 'inherit' }}\n                      disabled={disabled}\n                      onChange={onFromTimeChange(day.value)}\n                    />\n                      to\n                      \n                    <TextField\n                      type=\"time\"\n                      value={data.to}\n                      sx={{ marginLeft: '10px', backgroundColor: disabled ? '#ebebeb' : 'inherit' }}\n                      disabled={disabled}\n                      onChange={onToTimeChange(day.value)}\n                    />\n                  </div>\n                )\n              })\n            )\n          }})}\n\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  let meetingSchedulerLink;\n\n  if (meetingSchedulerIntegration && meetingSchedulerIntegration.data.username) {\n    meetingSchedulerLink = `${getUrlApp()}/meetings/${meetingSchedulerIntegration.data.username}`;\n  }\n\n  return (\n    <AuthLayout title='Settings'>\n      <Box width=\"50%\" bgcolor=\"#ffffff\">\n        {renderMSForm()}\n\n        <Table>\n        <TableBody>\n          {isSuperAdmin ? (\n              <TableRow>\n                <TableCell>\n                    <Link href=\"/settings/organization\">Organization configuration</Link>\n                  </TableCell>\n\n                  <TableCell>\n                    Change your site name, set some general preferences.\n                  </TableCell>\n                </TableRow>\n              ) : null\n          }\n\n          <TableRow>\n            <TableCell>\n              <Link href=\"/settings/users\">Users</Link>\n            </TableCell>\n\n            <TableCell>\n              Manage users\n            </TableCell>\n          </TableRow>\n\n          {isSystemAdmin ? (\n              <TableRow>\n                <TableCell>\n                    <Link href=\"/settings/manage-prompts\">Manage prompts</Link>\n                  </TableCell>\n\n                  <TableCell>\n                    Manage prompts\n                  </TableCell>\n                </TableRow>\n              ) : null\n            }\n\n          <TableRow>\n            <TableCell>\n              <Link href=\"/settings/candidate-status\">Candidate Pipeline</Link>\n            </TableCell>\n\n            <TableCell>\n              Manage candidate statuses\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell>\n              Calendar integration\n            </TableCell>\n\n            <TableCell>\n              <h3>\n                {calendarIntegration ? calendarIntegration.credentials && calendarIntegration.credentials.email : null}\n              </h3>\n\n              <Button variant=\"contained\" color=\"primary\" href={'/google/auth'}>\n                {calendarIntegration ? 'Configure' : 'Enable'}\n              </Button>\n\n              {\n                calendarIntegration ? (\n                  <>\n                    {' '}\n                      <Button variant=\"contained\" color=\"error\"\n                        onClick={() => {\n                          confirm({\n                            title: 'Confirmation',\n                            message: 'Are you sure to delete ?',\n                            onAnswer: (answer) => {\n                              if (answer) {\n                                deleteCalendarIntegration();\n                              }\n                            }\n                          })\n                        }}\n                      >\n                      Delete\n                    </Button>\n                  </>\n                ) : null  \n              }\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell>\n              Meeting scheduler\n            </TableCell>\n\n            <TableCell>\n              {meetingSchedulerIntegration ? \n\n              <p>\n                <Link href={meetingSchedulerLink} target='__blank'>\n                  {meetingSchedulerLink}\n                </Link>\n              </p> : null}\n\n              <Button variant=\"contained\" color=\"primary\" onClick={() => setShowMSForm(true)}>\n                {meetingSchedulerIntegration ? 'Configure' : 'Enable'}\n              </Button>\n\n              {\n                meetingSchedulerLink ? (\n                    <>\n                     {' '}\n                      <CopyToClipboard text={meetingSchedulerLink}\n                        onCopy={() => setCopiedIntegrationLink(true)}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"inherit\"\n                        >\n                            {copiedIntegrationLink ? 'Copied' : 'Copy link'}\n                        </Button>\n                      </CopyToClipboard>\n                    </>\n                ) : null\n              }\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      </Box>\n    </AuthLayout>\n  );\n};\n\nexport default Settings;\n"],"names":["window","__NEXT_P","push","__webpack_require__","renderField","label","renderControl","isCompact","required","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Grid","container","jsx","item","flex","id","concat","FormLabel","sx","color","fontWeight","br","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","onChange","event","value","query","marginTop","display","justifyContent","capitalize","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","backgroundColor","job","status","includes","span","style","borderRadius","width","padding","renderClientStatus","client","renderDetailItem","confirm","title","message","onAnswer","openConfirmDialogExternal","notify","obj","openSnackbarExternal","toString","__webpack_exports__","meetingSchedulerLink","calendarIntegration","setCalendarIntegration","useState","meetingSchedulerIntegration","setMeetingSchedulerIntegration","showMSForm","setShowMSForm","username","setUsername","days","setDays","saving","setSaving","user","loadingUser","useSession","copiedIntegrationLink","setCopiedIntegrationLink","isSystemAdmin","role","isSuperAdmin","getIntegrations","sendApiRequest","path","method","then","res","find","integration","type","msIntegration","data","useEffect","toggleDay","day","checked","onFromTimeChange","from","e","target","onToTimeChange","to","deleteCalendarIntegration","getUrlApp","AuthLayout","Box","bgcolor","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","alignItems","flexGrow","IconButton","onClick","CloseIcon","Button","variant","_id","undefined","catch","err","finally","disabled","DialogContent","DialogContentText","TextField","inputProps","borderRight","borderLeft","map","div","marginBottom","Checkbox","marginRight","marginLeft","Table","TableBody","TableRow","TableCell","Link","href","h3","credentials","email","answer","p","CopyToClipboard","text","onCopy"],"sourceRoot":""}