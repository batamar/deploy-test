{"version":3,"file":"static/chunks/pages/meetings/[username]-80efdedf9ba2980b.js","mappings":"qFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,uBACA,WACA,OAAeC,EAAQ,MACvB,EACA,sECNO,IAAMC,EAAY,CACrB,iBACA,oBACA,mBACA,iBACA,sBACA,kBACA,iBACA,kBACA,oBACA,mBACA,kBACA,iBACA,sBACA,oBACA,oBACA,mBACA,+BACA,iBACA,eACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,iCACA,iBACA,kBACA,yBACA,kBACA,sBACA,gBACA,gBACA,gBACA,oBACA,kBACA,UACA,kBACA,oBACA,kBACA,mBACA,gBACA,kBACA,gBACA,gBACA,gBACA,kBACA,oBACA,gBACA,eACA,mBACA,gBACA,cACA,mBACA,gBACA,iBACA,mBACA,eACA,kBACA,cACA,cACA,eACA,iBACA,iBACA,gBACA,kBACA,eACA,iBACA,gBACA,sBACA,mBACA,gBACA,cACA,cACA,iBACA,eACA,cACA,cACA,YACA,eACA,eACA,aACA,qBACA,eACA,gBACA,eACA,iBACA,aACA,eACA,cACA,mBACA,eACA,eACA,eACA,mBACA,gBACA,iBACA,iBACA,cACA,oBACA,iBACA,cACA,kBACA,eACA,mBACA,aACA,aACA,eACA,mBACA,qBACA,mBACA,qBACA,mBACA,mBACA,eACA,uBACA,eACA,qBACA,iBACA,eACA,iBACA,iBACA,mBACA,oBACH,oFC3Hc,SAASC,EAAOC,CAAG,EAChCC,CAAAA,EAAAA,EAAAA,CAAAA,EAAqB,CAAEC,QAASF,EAAIE,OAAO,EAAIF,EAAIG,QAAQ,EAAG,EAChE,gTCYe,SAASC,IACtB,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IAET,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAmB,EAAE,EACzC,CAAEC,KAAAA,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACX,CAACC,EAAWC,EAAa,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrC,CAACK,EAAkBC,EAAoB,CAAGN,CAAA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","sources":["webpack://_N_E/?8f43","webpack://_N_E/./components/constants.ts","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./pages/meetings/[username].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/meetings/[username]\",\n      function () {\n        return require(\"private-next-pages/meetings/[username].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/meetings/[username]\"])\n      });\n    }\n  ","export const timeZones = [\n    \"Pacific/Midway\",\n    \"Pacific/Pago_Pago\",\n    \"Pacific/Honolulu\",\n    \"America/Juneau\",\n    \"America/Los_Angeles\",\n    \"America/Tijuana\",\n    \"America/Denver\",\n    \"America/Phoenix\",\n    \"America/Chihuahua\",\n    \"America/Mazatlan\",\n    \"America/Chicago\",\n    \"America/Regina\",\n    \"America/Mexico_City\",\n    \"America/Monterrey\",\n    \"America/Guatemala\",\n    \"America/New_York\",\n    \"America/Indiana/Indianapolis\",\n    \"America/Bogota\",\n    \"America/Lima\",\n    \"America/Halifax\",\n    \"America/Caracas\",\n    \"America/La_Paz\",\n    \"America/Santiago\",\n    \"America/St_Johns\",\n    \"America/Sao_Paulo\",\n    \"America/Argentina/Buenos_Aires\",\n    \"America/Guyana\",\n    \"America/Godthab\",\n    \"Atlantic/South_Georgia\",\n    \"Atlantic/Azores\",\n    \"Atlantic/Cape_Verde\",\n    \"Europe/Dublin\",\n    \"Europe/London\",\n    \"Europe/Lisbon\",\n    \"Africa/Casablanca\",\n    \"Africa/Monrovia\",\n    \"Etc/UTC\",\n    \"Europe/Belgrade\",\n    \"Europe/Bratislava\",\n    \"Europe/Budapest\",\n    \"Europe/Ljubljana\",\n    \"Europe/Prague\",\n    \"Europe/Sarajevo\",\n    \"Europe/Skopje\",\n    \"Europe/Warsaw\",\n    \"Europe/Zagreb\",\n    \"Europe/Brussels\",\n    \"Europe/Copenhagen\",\n    \"Europe/Madrid\",\n    \"Europe/Paris\",\n    \"Europe/Amsterdam\",\n    \"Europe/Berlin\",\n    \"Europe/Rome\",\n    \"Europe/Stockholm\",\n    \"Europe/Vienna\",\n    \"Africa/Algiers\",\n    \"Europe/Bucharest\",\n    \"Africa/Cairo\",\n    \"Europe/Helsinki\",\n    \"Europe/Kiev\",\n    \"Europe/Riga\",\n    \"Europe/Sofia\",\n    \"Europe/Tallinn\",\n    \"Europe/Vilnius\",\n    \"Europe/Athens\",\n    \"Europe/Istanbul\",\n    \"Europe/Minsk\",\n    \"Asia/Jerusalem\",\n    \"Africa/Harare\",\n    \"Africa/Johannesburg\",\n    \"Europe/Volgograd\",\n    \"Europe/Moscow\",\n    \"Asia/Kuwait\",\n    \"Asia/Riyadh\",\n    \"Africa/Nairobi\",\n    \"Asia/Baghdad\",\n    \"Asia/Tehran\",\n    \"Asia/Muscat\",\n    \"Asia/Baku\",\n    \"Asia/Tbilisi\",\n    \"Asia/Yerevan\",\n    \"Asia/Kabul\",\n    \"Asia/Yekaterinburg\",\n    \"Asia/Karachi\",\n    \"Asia/Tashkent\",\n    \"Asia/Kolkata\",\n    \"Asia/Kathmandu\",\n    \"Asia/Dhaka\",\n    \"Asia/Colombo\",\n    \"Asia/Almaty\",\n    \"Asia/Novosibirsk\",\n    \"Asia/Rangoon\",\n    \"Asia/Bangkok\",\n    \"Asia/Jakarta\",\n    \"Asia/Krasnoyarsk\",\n    \"Asia/Shanghai\",\n    \"Asia/Chongqing\",\n    \"Asia/Hong_Kong\",\n    \"Asia/Urumqi\",\n    \"Asia/Kuala_Lumpur\",\n    \"Asia/Singapore\",\n    \"Asia/Taipei\",\n    \"Australia/Perth\",\n    \"Asia/Irkutsk\",\n    \"Asia/Ulaanbaatar\",\n    \"Asia/Seoul\",\n    \"Asia/Tokyo\",\n    \"Asia/Yakutsk\",\n    \"Australia/Darwin\",\n    \"Australia/Adelaide\",\n    \"Australia/Sydney\",\n    \"Australia/Brisbane\",\n    \"Australia/Hobart\",\n    \"Asia/Vladivostok\",\n    \"Pacific/Guam\",\n    \"Pacific/Port_Moresby\",\n    \"Asia/Magadan\",\n    \"Asia/Srednekolymsk\",\n    \"Pacific/Noumea\",\n    \"Pacific/Fiji\",\n    \"Asia/Kamchatka\",\n    \"Pacific/Majuro\",\n    \"Pacific/Auckland\",\n    \"Pacific/Tongatapu\"\n];","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Container, Grid, Typography, LinearProgress, Box, Button, TextField, FormLabel } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { CSSProperties } from 'react';\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\nimport Calendar from 'react-calendar';\nimport { useSession } from 'components/SessionContext';\nimport { sendApiRequest } from 'lib/api/public';\nimport { timeZones } from 'components/constants';\nimport notify from 'lib/notify';\n\ntype ValuePiece = Date | null;\ntype Value = ValuePiece | [ValuePiece, ValuePiece];\n\nexport default function MeetingScheduler() {\n  const router = useRouter();\n\n  const [times, setTimes] = useState<string[]>([]);\n  const { user } = useSession()\n  const [isLoading, setIsLoading] = useState(false);\n  const [requestedMinutes, setRequestedMinutes] = useState<string>('30');\n  const [timeZone, setTimeZone] = useState<string>('');\n  const [selectedTime, setSelectedTime] = useState<string>('');\n  const [firstName, setFirstName] = useState<string>('');\n  const [lastName, setLastName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [phone, setPhone] = useState<string>('');\n  const [isBooking, setIsBooking] = useState<boolean>(false);\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(false);\n\n  const query = router.query || {}\n  const date = query.date ? query.date.toString() : moment().format('YYYY-MM-DD');\n\n  const onChange = (newValue: Value) => {\n    router.push({\n      pathname: router.pathname,\n      query: { ...router.query, date: moment(new Date(newValue as Date)).format('YYYY-MM-DD') },\n    });\n  }\n\n  const loadTimes = () => {\n    setIsLoading(true);\n\n    sendApiRequest({\n      path: '/integrations/meeting-scheduler/get-available-times',\n      data: { username: query.username, date, requestedMinutes, timeZone },\n    }).then((res) => {\n      setIsLoading(false);\n      setTimes(res.times);\n\n      if (!timeZone) {\n        setTimeZone(res.defaultTimeZone);\n      }\n    }).catch(() => {\n      setIsLoading(false);\n      setTimes([]);\n    });\n  };\n\n  useEffect(() => {\n    if (router.isReady) {\n      loadTimes();\n    }\n  }, [router.isReady, date, requestedMinutes, timeZone]);\n\n  const confirmMeeting = () => {\n    if (!firstName || !lastName || !email || !phone) {\n      return notify('Please fill in all required fields.');\n    }\n\n    setIsBooking(true);\n\n    sendApiRequest({\n      path: '/integrations/meeting-scheduler/create-event',\n      data: {\n        username: query.username,\n        date,\n        slot: selectedTime,\n        duration: requestedMinutes,\n        timezone: timeZone,\n        firstName,\n        lastName,\n        email,\n        phone\n      },\n    }).then(() => {\n      setIsBooking(false);\n      setIsConfirmed(true);\n    }).catch((err) => {\n      notify(err);\n      setIsBooking(false);\n    });\n  }\n\n  if (!user) {\n    return <LinearProgress />\n  }\n\n  const renderMeetingDetails = () => {\n    return (\n      <p>\n        <strong>{moment(date).format('MMMM Do, YYYY')}</strong>\n\n        <br />\n\n        <strong>{moment(selectedTime, 'HH:mm').format('hh:mm a')} to {moment(selectedTime, 'HH:mm').add(requestedMinutes, 'minutes').format('hh:mm a')} with {user.firstName} {user.lastName}</strong>\n      </p>\n    )\n  }\n\n  const renderTimes = () => {\n    if (isLoading) {\n      return <LinearProgress />\n    }\n\n    if (!times || times.length === 0) {\n      return (\n        <>\n          <p>\n            Sorry, there are no available times. Please select a new date.\n          </p>\n\n          <SentimentDissatisfiedIcon sx={{ fontSize: '200px' }} />\n        </>\n      )\n    }\n\n    return times.map((time) => {\n      return (\n        <Button\n          variant={selectedTime === time ? 'contained' : 'outlined'}\n          key={time}\n          sx={{ width: '40%', marginRight: '10px', marginBottom: '10px' }}\n          onClick={() => setSelectedTime(time)}\n        >\n          {moment(time, 'HH:mm').format('hh:mm a')}\n        </Button>\n      )\n    })\n  }\n\n  const renderMinutesButton = ({ minutes, sx }: { minutes: string, sx?: CSSProperties }) => {\n    return (\n      <Button\n        variant={requestedMinutes === minutes ? 'contained' : 'outlined'}\n        sx={{ flex: 1, marginRight: '10px', ...sx }}\n        onClick={() => setRequestedMinutes(minutes)}>\n        {minutes} mins\n      </Button>\n    )\n  }\n\n  if (isConfirmed) {\n    return (\n      <Container maxWidth=\"sm\">\n        <br />\n        <br />\n\n        <Box sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h4\">{user.organizationName}</Typography>\n\n          <br />\n          <br />\n\n          <CheckIcon sx={{ fontSize: '100px', background: '#0fa30f', borderRadius: '50%', padding: '20px', color: 'white' }} />\n\n          <p style={{ fontSize: '20px' }}>Appointment Confirmed</p>\n\n          <p>You will be receiving an email confirmation shortly.</p>\n\n          <hr />\n\n          {renderMeetingDetails()}\n        </Box>\n      </Container>\n    )\n  }\n\n  if (selectedTime) {\n    return (\n      <Container maxWidth=\"sm\">\n        <br />\n        <br />\n\n        <Box sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h4\">{user.organizationName}</Typography>\n\n          <br />\n          <br />\n\n          <p style={{ fontSize: '20px' }}>Confirm your meeting for</p>\n\n          {renderMeetingDetails()}\n\n          <hr />\n        </Box>\n\n        <br />\n\n        <FormLabel>First Name *</FormLabel>\n        <TextField fullWidth value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n        <br /><br />\n\n        <FormLabel>Last Name *</FormLabel>\n        <TextField fullWidth value={lastName} onChange={(e) => setLastName(e.target.value)} />\n        <br /><br />\n\n        <FormLabel>Email *</FormLabel>\n        <TextField fullWidth value={email} onChange={(e) => setEmail(e.target.value)} />\n        <br /><br />\n\n        <FormLabel>Phone *</FormLabel>\n        <TextField fullWidth value={phone} onChange={(e) => setPhone(e.target.value)} />\n        <br /><br />\n\n        <Box sx={{ float: 'right' }}>\n          <Button variant=\"outlined\" onClick={() => setSelectedTime('')}>\n            Back\n          </Button>\n\n          {' '}\n\n          <Button variant=\"contained\" onClick={confirmMeeting} disabled={isBooking}>\n            {isBooking ? 'Booking...' : 'Confirm'}\n          </Button>\n        </Box>\n      </Container>\n    )\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <br />\n      <br />\n\n      <Typography variant=\"h4\" align=\"center\">{user.organizationName}</Typography>\n\n      <br />\n      <br />\n      <br />\n\n      <select\n        style={{ float: 'right', marginBottom: '5px', border: 'none' }}\n        onChange={(e) => setTimeZone(e.target.value)}\n        value={timeZone}\n      >\n        {timeZones.map((tz, index) => (\n          <option key={index} value={tz}>\n            {tz}\n          </option>\n        ))}\n      </select>\n\n      <Grid container sx={{\n        marginBottom: '5px',\n        background: '#fafafa',\n        borderRadius: '6px',\n        boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.12)',\n        overflow: 'hidden',\n        minHeight: '565px'\n      }}\n      >\n\n        <Grid item sx={{ backgroundColor: '#ebebeb' }} flex={1}>\n          <Box sx={{ borderBottom: '1px solid', marginBottom: '10px', padding: '20px 40px' }}>\n            <Typography variant=\"h6\">Schedule your meeting with</Typography>\n\n            <br />\n\n            <Typography variant=\"h4\">{user.firstName} {user.lastName}</Typography>\n\n            <br />\n          </Box>\n\n          <Box sx={{ padding: '20px 40px' }}>\n            <Calendar onChange={onChange} value={date} />\n          </Box>\n        </Grid>\n\n        <Grid item flex={1}>\n          <Box sx={{ margin: '20px', color: 'gray', textAlign: 'center' }}>\n            <Box>\n              <h3>\n                How much time do you need?\n              </h3>\n\n              <Grid container>\n                {renderMinutesButton({ minutes: '15' })}\n                {renderMinutesButton({ minutes: '30' })}\n                {renderMinutesButton({ minutes: '60', sx: { marginRight: '0px' } })}\n              </Grid>\n\n              <br />\n            </Box>\n\n            <hr />\n\n            <Box>\n              <h3>\n                What time works best for you?\n              </h3>\n\n              {renderTimes()}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","timeZones","notify","obj","openSnackbarExternal","message","toString","MeetingScheduler","router","useRouter","times","setTimes","useState","user","useSession","isLoading","setIsLoading","requestedMinutes","setRequestedMinutes","timeZone","setTimeZone","selectedTime","setSelectedTime","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","isBooking","setIsBooking","isConfirmed","setIsConfirmed","query","date","moment","format","loadTimes","sendApiRequest","path","data","username","then","res","defaultTimeZone","catch","useEffect","isReady","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","LinearProgress","renderMeetingDetails","jsxs","p","strong","br","add","renderMinutesButton","minutes","sx","param","Button","variant","flex","marginRight","onClick","Container","maxWidth","Box","textAlign","Typography","organizationName","CheckIcon","fontSize","background","borderRadius","padding","color","style","hr","FormLabel","TextField","fullWidth","value","onChange","e","target","float","slot","duration","timezone","err","disabled","align","select","marginBottom","border","map","tz","index","option","Grid","container","boxShadow","overflow","minHeight","item","backgroundColor","borderBottom","Calendar","pathname","Date","newValue","margin","h3","length","time","width","Fragment","SentimentDissatisfiedIcon"],"sourceRoot":""}