{"version":3,"file":"static/chunks/pages/calendar-b5ee745e7aeb8ba0.js","mappings":"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","sources":["webpack://_N_E/?60e3","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./pages/calendar.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/calendar\",\n      function () {\n        return require(\"private-next-pages/calendar.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/calendar\"])\n      });\n    }\n  ","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Dialog, DialogTitle, DialogContent, TextField, Tooltip, Select, MenuItem, Box, LinearProgress } from '@mui/material';\nimport moment from 'moment-timezone'\nimport { sendApiRequest } from 'lib/api/public';\nimport AuthLayout from '../components/AuthLayout';\nimport { renderField } from 'components/utils';\n\nconst localizer = momentLocalizer(moment)\n\nconst CalendarP = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [integration, setIntegration] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(null);\n\n  // const handleSelectSlot = ({ start }) => {\n  //   setNewEvent({\n  //     start: start,\n  //     time: moment(start).format('h:mm A'),\n  //     duration: 1,\n  //   });\n  // };\n\n  useEffect(() => {\n    sendApiRequest({ path: '/integrations/calendar/list-events', method: 'GET' })\n      .then((res) => {\n        setEvents(res.map((event) => ({\n          start: event.startDateTime,\n          end: event.endDateTime,\n          title: event.title,\n          isAllDay: event.isAllDay\n        })));\n      }).catch(() => {\n      });\n\n    sendApiRequest({ path: '/users/get-integrations-by-user', method: 'GET' })\n      .then((res) => {\n        const integration = res.find((i) => i.type === 'calendar');\n\n        if (integration) {\n          setIntegration(integration);\n        }\n      }).catch(() => {\n      }).finally(() => {\n        setIsLoading(false);\n      });\n\n  }, []);\n\n  const renderEventForm = () => {\n    if (!newEvent) return null;\n\n    const { type } = newEvent;\n\n    return (\n      <Dialog open onClose={() => setNewEvent(null)} fullWidth maxWidth=\"md\">\n        <DialogTitle>New Event</DialogTitle>\n        <DialogContent sx={{ width: '100%' }}>\n          <br />\n\n          {renderField({\n            label: 'Title', renderControl: () => {\n              return (\n                <TextField fullWidth label=\"Title\" value={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })} />\n              )\n            }\n          })}\n\n          {renderField({\n            label: 'Type', renderControl: () => {\n              return (\n                <div style={{ display: 'flex' }}>\n                  {\n                    [\n                      { code: 'call', label: 'Call' },\n                      { code: 'email', label: 'Email' },\n                      { code: 'meeting', label: 'Meeting' },\n                      { code: 'interview', label: 'Interview' },\n                      { code: 'personal', label: 'Personal' },\n                      { code: 'other', label: 'Other' },\n                    ].map((t, index) => {\n                      return (\n                        <div\n                          key={index}\n                          className='type-item'\n                          style={{\n                            backgroundColor: t.code === type ? '#000' : '#dfdfdf',\n                            color: t.code === type ? '#ffffff' : 'inherit',\n                          }}\n                          onClick={() => setNewEvent({ ...newEvent, type: t.code })}\n                        >\n                          <Tooltip title={t.label}>\n                            <span>{t.label}</span>\n                          </Tooltip>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              );\n            }\n          })}\n\n          {renderField({\n            label: 'Date & Time', renderControl: () => {\n              return (\n                <>\n                  <TextField value={moment(newEvent.start).format('MM-DD-YYYY')} onChange={(e) => setNewEvent({ ...newEvent, start: moment(e.target.value).format('MM-DD-YYYY') })} />\n                  {' '}\n                  <TextField value={moment(newEvent.time).format('h:mm A')} onChange={(e) => setNewEvent({ ...newEvent, time: moment(e.target.value).format('h:mm A') })} />\n                  {' '}\n\n                  <Select value={newEvent.duration} onChange={(e) => setNewEvent({ ...newEvent, duration: e.target.value })}>\n                    <MenuItem value=\"15minutes\">15 minutes</MenuItem>\n                    <MenuItem value=\"30minutes\">30 minutes</MenuItem>\n                    <MenuItem value=\"45minutes\">45 minutes</MenuItem>\n                    <MenuItem value=\"1hour\">1 hour</MenuItem>\n                    <MenuItem value=\"1.5hour\">1.5 hours</MenuItem>\n                    <MenuItem value=\"2hours\">2 hours</MenuItem>\n                    <MenuItem value=\"3hours\">3 hours</MenuItem>\n                    <MenuItem value=\"4hours\">4 hours</MenuItem>\n                    <MenuItem value=\"5hoursOrMore\">5 hours or more</MenuItem>\n                  </Select>\n                </>\n              )\n            }\n          })}\n\n\n          {renderField({\n            label: 'Location', renderControl: () => {\n              return (\n                <TextField fullWidth label=\"Location\" value={newEvent.location} onChange={(e) => setNewEvent({ ...newEvent, location: e.target.value })} />\n              )\n            }\n          })}\n\n          {renderField({\n            label: 'Description', renderControl: () => {\n              return (\n                <TextField fullWidth multiline minRows={5} label=\"Description\" value={newEvent.description} onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })} />\n              )\n            }\n          })}\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <LinearProgress />;\n    }\n\n    if (!integration) {\n      return (\n        <Box sx={{ textAlign: 'center' }}>\n          Calendar integration is not enabled.\n          Please enable the integration in the <Link href=\"/settings\">settings</Link> page.\n        </Box>\n      )\n    }\n\n    return (\n      <div>\n        {renderEventForm()}\n\n        <Calendar\n          localizer={localizer}\n          events={events}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500 }}\n          selectable\n          // onSelectSlot={handleSelectSlot}\n          components={{\n            event: ({ event }) => (\n              <div>\n                {event.title}\n                <br />\n\n                {\n                  event.isAllDay ?\n                    <span>All Day</span>\n                    :\n                    <span>{moment(event.start).tz('UTC').format('hh:mm A')} - {moment(event.end).tz('UTC').format('hh:mm A')}</span>\n                }\n                <br />\n              </div>\n            )\n          }}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <AuthLayout title=\"Calendar\">\n      {renderContent()}\n    </AuthLayout>\n  );\n};\n\nexport default CalendarP;\n"],"names":["window","__NEXT_P","push","__webpack_require__","renderField","label","renderControl","isCompact","required","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Grid","container","jsx","item","flex","id","concat","FormLabel","sx","color","fontWeight","br","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","onChange","event","value","query","marginTop","display","justifyContent","capitalize","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","backgroundColor","job","status","includes","span","style","borderRadius","width","padding","renderClientStatus","client","renderDetailItem","localizer","momentLocalizer","moment","__webpack_exports__","isLoading","setIsLoading","useState","integration","setIntegration","events","setEvents","newEvent","setNewEvent","useEffect","sendApiRequest","path","method","then","res","map","start","startDateTime","end","endDateTime","title","isAllDay","catch","find","i","type","finally","AuthLayout","LinearProgress","div","renderEventForm","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","e","target","code","t","index","className","onClick","Tooltip","format","time","Select","duration","MenuItem","location","multiline","minRows","description","Calendar","startAccessor","endAccessor","height","selectable","components","tz","Box","textAlign","Link","href"],"sourceRoot":""}