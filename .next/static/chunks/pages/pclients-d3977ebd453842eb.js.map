{"version":3,"file":"static/chunks/pages/pclients-d3977ebd453842eb.js","mappings":"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","sources":["webpack://_N_E/?bfa9","webpack://_N_E/./components/common/DeleteButton.tsx","webpack://_N_E/./components/common/Editor.tsx","webpack://_N_E/./components/common/Uploader.tsx","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./hooks/useList.ts","webpack://_N_E/./lib/confirm.ts","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./components/ClientForm.tsx","webpack://_N_E/./pages/pclients.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/pclients\",\n      function () {\n        return require(\"private-next-pages/pclients.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/pclients\"])\n      });\n    }\n  ","import React, { useState } from 'react';\nimport DeleteIcon from '@mui/icons-material/Cancel';\n\ntype Props = {\n    onClick: () => void;\n};\n\nconst DeleteButton = ({ onClick }: Props) => {\n    const [hover, setHover] = useState(false);\n\n    return (\n        <DeleteIcon style={{ cursor: 'pointer', color: hover ? '#dc5e7f' : '#f2a1b6' }} onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} onClick={onClick} />\n    )\n};\n\nexport default DeleteButton;","import React, { useRef, ReactNode } from 'react';\nimport type { ComponentType } from 'react';\nimport dynamic from 'next/dynamic';\nimport 'react-quill/dist/quill.snow.css';\nimport type ReactQuill from 'react-quill';\n\ntype Props = {\n  renderExtraContent?: (quillRef: React.RefObject<ReactQuill>) => ReactNode;\n} & React.ComponentProps<typeof ReactQuill>;\n\nconst QuillWrapper = dynamic(\n  async () => {\n    const { default: RQ } = await import('react-quill');\n\n    const Quill = RQ.Quill;\n\n    const Embed = Quill.import('blots/block/embed');\n    class Divider extends Embed {\n      // if you want to add inline style, override create method\n      static create(value: any) {\n        const node = super.create(value);\n        return node;\n      }\n      // set blotName & tagName\n      static blotName = 'divider';\n      static tagName = 'hr';\n    }\n\n    Quill.register({ 'formats/hr': Divider });\n\n    // eslint-disable-next-line react/display-name\n    return ({ ...props }) => {\n      const quillRef = useRef(null); \n\n      const { renderExtraContent } = props;\n\n      props.modules = {\n        toolbar: [\n          [{ header: [1, 2, false] }],\n          ['bold', 'italic', 'underline', 'strike'],\n          ['blockquote', 'code-block'],\n          [{ list: 'ordered' }, { list: 'bullet' }],\n          ['link', 'image'],\n          ['clean'],\n        ],\n      };\n\n      props.formats = [\n        'header',\n        'bold',\n        'italic',\n        'underline',\n        'strike',\n        'blockquote',\n        'code-block',\n        'list',\n        'bullet',\n        'link',\n        'image',\n        'hr',\n        'divider',\n      ];\n\n      return (\n        <>\n          <RQ ref={quillRef} {...props} />\n          {renderExtraContent && renderExtraContent(quillRef)}\n        </>\n      )\n    };\n  },\n  {\n    ssr: false,\n  },\n) as ComponentType<Props>;\n\nexport default QuillWrapper;\n","import React, { useState } from 'react';\nimport { readFile, uploadFileRequest } from '../../lib/api/public';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Table } from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport DeleteButton from './DeleteButton';\n\ntype File = {\n  name?: string;\n  url: string;\n  date?: Date;\n}\n\ntype Props = {\n    label: string;\n    onChange: (results: any) => void;\n    multiple?;\n    showList?: boolean;\n    defaultFiles?: File[];\n};\n\nconst Uploader = ({ label, onChange, multiple=true, showList=true, defaultFiles }: Props) => {\n    const [isUploading, setUploading] = useState(false);\n    const [results, setResults] = useState(defaultFiles || []);\n\n    const uploadFile = (e) => {\n        const files = e.target.files;\n\n        for (const file of files) {\n            const formData = new FormData();\n            formData.append('file', file);\n\n            setUploading(true);\n\n            uploadFileRequest(formData)\n                .then((response) => {\n                    setUploading(false);\n\n                    response\n                        .json()\n                        .then(({ result }) => {\n                            results.push({\n                                url: result,\n                                date: new Date(),\n                                name: file.name\n                            });\n\n                            setResults([...results]);\n\n                            if (files.length === results.length) {\n                                if (multiple) {\n                                    onChange(results);\n                                } else {\n                                    onChange(results[0]);\n                                }\n                            }\n                        })\n                        .catch((error) => {\n                            console.error(error.message);\n                        });\n                })\n                .catch((error) => {\n                    setUploading(false);\n                    console.error(error.message);\n                });\n        }\n    }\n\n    const removeResult = (result: File) => {\n        const newResults = results.filter(r => r.url !== result.url);\n\n        setResults(newResults);\n\n        if (multiple) {\n            onChange(newResults);\n        } else {\n            onChange(newResults[0]);\n        }\n    }\n\n    const renderList = () => {\n        if (!showList) {\n            return null;\n        }\n\n        return (\n            <>\n                {results.length > 0 ? (<><br /><br /></>) : null}\n\n                <Table>\n                    {results.map((result) => {\n                        return (\n                            <div style={{ display: 'flex' }}>\n                                <DeleteButton onClick={() => removeResult(result)} />\n                                <a href={readFile(result.url)} target='__blank'>{result.name}</a>\n                            </div>\n                        );\n                    })}\n                </Table>\n            </>\n        )\n    }\n\n    return (\n        <div style={{ position: 'relative', display: 'inline-block' }}>\n            <input type='file' id={`uploader-${label}`} onChange={uploadFile} style={{ display: 'none' }} multiple={multiple} />\n\n            <label\n                htmlFor={`uploader-${label}`}\n                style={{\n                    padding: '10px 35px',\n                    borderRadius: '5px',\n                    width: '215px !important',\n                    cursor: 'pointer',\n                    background: '#ebecf0',\n                    color: '#4f4f51',\n                    border: '1px solid #dfe0e4',\n                    position: 'relative',\n                }}\n            >\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        height: '20px',\n                        left: '5px',\n                        top: '10px'\n                    }}\n                >\n                 {isUploading ? <CircularProgress size={20} /> : <AttachFileIcon />}\n                </div>\n\n                {label}\n            </label>\n\n            {renderList()}\n        </div>\n    )\n};\n\nexport default Uploader;","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { sendApiRequest } from '../lib/api/public';\n\ntype Props = {\n    endpoint: string;\n    extraParams?: string\n    page?: number,\n    useEffectParams?: any[]\n}\n\nconst useList = ({ endpoint, page, extraParams, useEffectParams }: Props) => {\n    const router = useRouter();\n    const pageNumber = page || router.query.page || 1;\n\n    const [isLoading, setLoading] = useState(false);\n    const [list, setList] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n\n    const fetchList = async () => {\n        sendApiRequest({\n            path: `/${endpoint}?page=${pageNumber}${extraParams}`,\n            method: 'GET',\n        }).then((response: any) => {\n            setLoading(false);\n\n            if (!response.error) {\n                setTotalCount(response.totalCount);\n                setList(response.list);\n            }\n        })\n    };\n\n    useEffect(() => {\n        if (router.isReady) {\n            setLoading(true);\n            fetchList();\n        }\n    }, [pageNumber, router.isReady, ...(useEffectParams || [])]);\n\n    return {\n        page: pageNumber,\n        fetchList,\n        isLoading,\n        list,\n        totalCount,\n        setList,\n        setTotalCount\n    };\n};\n\nexport default useList;\n","import { openConfirmDialogExternal } from '../components/common/Confirmer';\n\nexport default function confirm({\n  title,\n  message,\n  onAnswer,\n}: {\n  title: string;\n  message: string;\n  onAnswer: (answer) => void;\n}) {\n  openConfirmDialogExternal({ title, message, onAnswer });\n}\n","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import React, { useState } from 'react';\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    FormLabel,\n    Grid,\n    IconButton,\n    MenuItem,\n    Select,\n    TextField,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport notify from 'lib/notify';\nimport { sendApiRequest } from 'lib/api/public';\nimport Editor from './common/Editor';\nimport Uploader from './common/Uploader';\nimport { renderField } from './utils';\n\ntype Address = {\n    street: string,\n    city: string,\n    state: string,\n    zipcode: string,\n}\n\ntype Client = {\n    _id: string,\n    name: string,\n    logo: string,\n    address: Address,\n    websiteUrl: string,\n    companyEmailAddress: string,\n    notes: string,\n    attachments: any[],\n    status: string,\n}\n\ntype Props = {\n    onClose: () => void;\n    onSuccess: () => void;\n    open: boolean;\n    client?: Client\n};\n\nconst ClientForm = ({ open, onClose, onSuccess, client }: Props) => {\n    const clientO = client || {} as Client;\n\n    const [name, setName] = useState(clientO.name);\n    const [logo, setLogo] = useState(clientO.logo);\n    const [status, setStatus] = useState(clientO.status);\n    const [notes, setNotes] = useState(clientO.notes);\n    const [address, setAddress] = useState(clientO.address || {} as Address);\n    const [websiteUrl, setWebsiteUrl] = useState(clientO.websiteUrl);\n    const [companyEmailAddress, setCompanyEmailAddress] = useState(clientO.companyEmailAddress);\n    const [attachments, setAttachments] = useState(clientO.attachments || []);\n    const [saving, setSaving] = useState(false);\n\n    const onSave = async () => {\n        if (!name) {\n            notify('Please fill the required fields');\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await sendApiRequest({\n                path: '/clients/manage',\n                method: 'POST',\n                data: {\n                    _id: clientO._id,\n                    name,\n                    logo,\n                    status,\n                    notes,\n                    address,\n                    websiteUrl,\n                    companyEmailAddress,\n                    attachments\n                }\n            });\n\n            onSuccess();\n\n            setSaving(false);\n        } catch (error) {\n            notify(error);\n            setSaving(false);\n        }\n\n    };\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"modal-title\" open={open} fullScreen style={{ width: '50%', left: 'inherit' }}>\n            <DialogTitle id=\"modal-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{clientO.name ? 'Edit client' : 'Add client'}</Box>\n                    <Box>\n                        <IconButton onClick={onClose}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={saving}>\n                            Save\n                        </Button>\n                    </Box>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent style={{ backgroundColor: '#f8f8f8' }}>\n                <br />\n\n                {renderField({ label: 'Name', required: true, renderControl: () =>\n                    <TextField defaultValue={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                })}\n                <br />\n\n                {renderField({ label: 'Logo', renderControl: () => {\n                    return (\n                        <>\n                            <Uploader\n                                label=\"Upload\"\n                                multiple={false}\n                                defaultFiles={logo ? [{ name: logo, url: logo }] : []} onChange={(result) => {\n\n                                if (result) {\n                                    setLogo(result.url);\n                                } else {\n                                    setLogo('');\n                                }\n                            }} />\n                        </>\n                    );\n                }})}\n\n                <Grid container>\n                    <Grid item flex={1}>\n                        <FormLabel sx={{ color: '#000', fontWeight: 'bold' }}>Address</FormLabel>\n                    </Grid>\n                    <Grid item flex={4}>\n                        <TextField\n                            fullWidth\n                            multiline\n                            rows={2}\n                            label=\"Street\"\n                            defaultValue={address.street}\n                            onChange={(e) => {\n                                address.street = e.target.value;\n                                setAddress(address);\n                            }}\n                        /> <br /><br />\n\n                        <TextField\n                            fullWidth\n                            label=\"City\"\n                            defaultValue={address.city}\n                            onChange={(e) => {\n                                address.city = e.target.value;\n                                setAddress(address);\n                            }}\n                        /> <br /><br />\n\n                        <TextField\n                            fullWidth\n                            label=\"State\"\n                            defaultValue={address.state}\n                            onChange={(e) => {\n                                address.state = e.target.value;\n                                setAddress(address);\n                            }}\n                        /> <br /><br />\n\n                        <TextField\n                            fullWidth\n                            label=\"Zip Code\"\n                            defaultValue={address.zipcode}\n                            onChange={(e) => {\n                                address.zipcode = e.target.value;\n                                setAddress(address);\n                            }}\n                        /> <br /><br />\n                    </Grid>\n                </Grid>\n\n                {renderField({ label: 'Website', renderControl: () => {\n                    return (\n                        <TextField\n                            fullWidth\n                            value={websiteUrl}\n                            onChange={(e) => {\n                                setWebsiteUrl(e.target.value);\n                            }}\n                        />\n                    )\n                }})}\n\n                {renderField({ label: 'Company email address', renderControl: () => {\n                    return (\n                        <TextField\n                            fullWidth\n                            value={companyEmailAddress}\n                            onChange={(e) => {\n                                setCompanyEmailAddress(e.target.value);\n                            }}\n                        />\n                    )\n                }})}\n\n                {renderField({ label: 'Status', renderControl: () => {\n                    return (\n                        <Select labelId='label-Status' value={clientO.status} onChange={(e) => setStatus(e.target.value)} fullWidth>\n                            <MenuItem value=\"active\">Active</MenuItem>\n                            <MenuItem value=\"onHold\">InActive/On Hold</MenuItem>\n                        </Select>\n                    )\n                }})}\n\n                <FormControl fullWidth>\n                    <h3>Notes</h3>\n                    <Editor style={{ height: '300px' }} value={notes} onChange={(value) => setNotes(value)} />\n                </FormControl>\n\n                <br /><br /><br /><br /><br />\n\n                {renderField({ label: 'Attachments', renderControl: () => {\n                    return (\n                        <Uploader\n                            label=\"Upload files\"\n                            defaultFiles={attachments}\n                            multiple={true}\n                            onChange={(results) => {\n                                setAttachments(results);\n                            }}\n                        />\n                    )\n                }})}\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default ClientForm;\n","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport AuthLayout from '../components/AuthLayout';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport ClientForm from '../components/ClientForm';\nimport confirm from '../lib/confirm';\nimport { renderClientStatus, renderPagination } from '../components/utils';\nimport useList from '../hooks/useList';\nimport { sendApiRequest } from '../lib/api/public';\nimport notify from '../lib/notify';\nimport Link from 'next/link';\n\nconst Clients = () => {\n  const router = useRouter();\n\n  const search = router.query.search || '';\n\n  const { page, fetchList, isLoading, totalCount, list } = useList({\n    endpoint: 'clients',\n    extraParams: `&source=list&search=${search}`\n  });\n\n  const [selectedClient, setSelectedClient] = useState();\n  const [showForm, setShowForm] = useState(false);\n\n  const renderForm = () => {\n    if (!showForm) {\n      return null;\n    }\n\n    return (\n      <ClientForm\n        open={showForm}\n        client={selectedClient}\n        onClose={() => setShowForm(false)}\n        onSuccess={() => { setShowForm(false); fetchList(); }}\n      />\n    )\n  }\n\n  const removeClient = async (clientId: string) => {\n    try {\n      await sendApiRequest({\n        path: '/clients/manage',\n        method: 'POST',\n        data: {\n          action: 'delete',\n          _id: clientId,\n        }\n      });\n\n      notify('Client deleted successfully');\n\n      fetchList();\n    } catch (error) {\n      notify(error);\n    }\n  };\n\n  return (\n    <AuthLayout title='Clients' isLoading={isLoading}>\n      <div\n        style={{\n          float: 'right',\n        }}\n      >\n        <Button\n          onClick={() => { setSelectedClient(null); setShowForm(true) }}\n          variant=\"contained\"\n        >\n          + Client\n        </Button>\n      </div>\n\n      {renderForm()}\n      \n      <div style={{ clear: 'both', marginBottom: '10px' }} />\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Website</TableCell>\n              <TableCell>Address</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.map((client, index) => (\n              <TableRow\n                key={client._id}\n              >\n                <TableCell width={5}>{index + 1}</TableCell>\n                <TableCell>\n                  <Link href={`/client?id=${client._id}`} style={{ display: 'flex' }}>\n                    {client.name}\n                  </Link>\n                </TableCell>\n                <TableCell>{client.websiteUrl}</TableCell>\n                <TableCell>{client.address ? (\n                  <span>{client.address.state}, {client.address.city}</span>\n                ) : null}</TableCell>\n                <TableCell>\n                  {renderClientStatus(client)}\n                </TableCell>\n\n                <TableCell align='right'>\n                    <Button\n                      variant='contained'\n                      size=\"small\"\n                      color=\"inherit\"\n                      onClick={() => {\n                        setSelectedClient(client);\n                        setShowForm(true)\n                      }}>\n                      Edit\n                    </Button>\n\n                   {' '}\n\n                    <Button variant='contained' size=\"small\" color=\"error\" onClick={() => {\n                        confirm({\n                          title: 'Confirmation',\n                          message: 'Are you sure to delete ?',\n                          onAnswer: (answer) => {\n                            if (answer) {\n                              removeClient(client._id);\n                            }\n                          }\n                        })\n                    }}>Delete</Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {renderPagination({\n        router,\n        totalCount,\n        page,\n      })}\n\n    </AuthLayout>\n  );\n};\n\nexport default Clients;"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","onClick","param","hover","setHover","useState","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DeleteIcon","style","cursor","color","onMouseOver","onMouseLeave","QuillWrapper","dynamic","default","RQ","Promise","all","e","then","t","bind","Quill","Embed","import","Divider","create","value","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_4__","_","blotName","tagName","register","props","quillRef","useRef","renderExtraContent","modules","toolbar","header","list","formats","jsxs","Fragment","ref","ssr","label","onChange","multiple","showList","defaultFiles","isUploading","setUploading","results","setResults","removeResult","newResults","filter","r","url","result","div","position","display","input","type","id","concat","files","target","file","formData","FormData","append","uploadFileRequest","response","json","date","Date","name","length","catch","console","error","message","htmlFor","padding","borderRadius","width","background","border","height","left","top","CircularProgress","size","AttachFileIcon","br","Table","map","DeleteButton","a","href","readFile","renderField","renderControl","isCompact","required","Grid","container","item","flex","FormLabel","sx","fontWeight","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","event","query","marginTop","justifyContent","capitalize","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","backgroundColor","job","status","includes","span","renderClientStatus","client","renderDetailItem","endpoint","extraParams","useEffectParams","useRouter","pageNumber","isLoading","setLoading","setList","setTotalCount","fetchList","sendApiRequest","path","method","useEffect","isReady","confirm","title","onAnswer","openConfirmDialogExternal","notify","obj","openSnackbarExternal","toString","components_ClientForm","open","onClose","onSuccess","clientO","setName","logo","setLogo","setStatus","notes","setNotes","address","setAddress","websiteUrl","setWebsiteUrl","companyEmailAddress","setCompanyEmailAddress","attachments","setAttachments","saving","setSaving","onSave","data","_id","jsx_runtime","Dialog","aria-labelledby","fullScreen","DialogTitle","Box","alignItems","flexGrow","IconButton","CloseIcon","Button","variant","disabled","DialogContent","TextField","defaultValue","fullWidth","Uploader","multiline","rows","street","city","state","zipcode","Select","labelId","MenuItem","FormControl","h3","Editor","pclients","search","useList","selectedClient","setSelectedClient","showForm","setShowForm","removeClient","clientId","action","AuthLayout","float","ClientForm","clear","marginBottom","TableContainer","component","Paper","minWidth","TableHead","TableRow","TableCell","TableBody","index","Link","align","answer"],"sourceRoot":""}