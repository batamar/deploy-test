{"version":3,"file":"static/chunks/pages/[organizationId]/carreers/jobs/[jobId]-d48d5ddca3c8c828.js","mappings":"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","sources":["webpack://_N_E/?dc47","webpack://_N_E/./components/common/Custom404.tsx","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./components/job/Apply.tsx","webpack://_N_E/./pages/[organizationId]/carreers/jobs/[jobId].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[organizationId]/carreers/jobs/[jobId]\",\n      function () {\n        return require(\"private-next-pages/[organizationId]/carreers/jobs/[jobId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[organizationId]/carreers/jobs/[jobId]\"])\n      });\n    }\n  ","import React from 'react';\n\nconst Custom404: React.FC = () => {\n  return (\n    <div\n      style={{\n        fontFamily:\n          'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n        height: '100vh',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <div style={{ lineHeight: '48px' }}>\n        <h1\n          style={{\n            borderRight: '1px solid rgba(0,0,0,.3)',\n            display: 'inline-block',\n            margin: '0 20px 0 0',\n            paddingRight: '23px',\n            fontSize: '24px',\n            fontWeight: '500',\n            verticalAlign: 'top',\n          }}\n        >\n          404\n        </h1>\n\n        <div style={{ display: 'inline-block' }}>\n          <h2 style={{ fontSize: '14px', fontWeight: '400', lineHeight: '28px' }}>\n            This page could not be found.\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Custom404;\n","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import Head from 'next/head';\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { readFile, sendApiRequest, uploadFileRequest } from '../../lib/api/public';\nimport notify from '../../lib/notify';\nimport {\n  Container,\n  LinearProgress,\n  Button,\n  Box,\n  FormControl,\n  TextField,\n  FormLabel,\n} from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { debounce } from '@mui/material/utils';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\n\nconst Apply = ({\n  title,\n  metaDescription,\n  ldJson,\n  job,\n  company,\n}: {\n  title: string;\n  metaDescription: string;\n  ldJson: any;\n  job: any;\n  company: any;\n}) => {\n  const [showThanksForm, setShowThanksForm] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isAlreadyApplied, setAlreadyApplied] = useState(false);\n  const [isUploading, setUploading] = useState(false);\n  const [resume, setResume] = useState<string>('');\n  const [fileName, setFileName] = useState<string>('');\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [currentCompany, setCurrentCompany] = useState('');\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [websiteUrl, setWebsiteUrl] = useState('');\n\n  const router = useRouter();\n  const { jobId } = router.query;\n\n  const submit = () => {\n    if (!fullName || !email || !phone || !resume) {\n      return notify('Please fill the required fields');\n    }\n\n    if (isAlreadyApplied) {\n      return notify('You have already applied for this job');\n    }\n\n    setLoading(true);\n\n    sendApiRequest({\n      path: `/portal/jobs/apply`,\n      data: {\n        jobId,\n        jobTitle: job.title,\n        resume,\n        fullName,\n        email,\n        phone,\n        currentLocation,\n        currentCompany,\n        linkedinUrl,\n        websiteUrl,\n      },\n    })\n      .then(() => {\n        setLoading(false);\n        setShowThanksForm(true);\n      })\n      .catch((e) => {\n        notify(e.message);\n        setLoading(false);\n      });\n  };\n\n  const uploadFile = (e) => {\n    const file = e.target.files[0];\n\n    if (file.size > 5 * 1024 * 1024) {\n      return notify('File size exceeds the maximum limit of 5MB');\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    setUploading(true);\n\n    uploadFileRequest(formData)\n      .then((response) => {\n        setUploading(false);\n        setFileName(file.name);\n\n        response\n          .json()\n          .then(({ result }) => {\n            setResume(result);\n          })\n          .catch((error) => {\n            setFileName('');\n            notify('Error uploading file');\n            console.error(error.message);\n          });\n      })\n      .catch((error) => {\n        setUploading(false);\n        setFileName('');\n        notify(error.message);\n      });\n  };\n\n  const onChangeEmail = debounce((e) => {\n    setEmail(e.target.value);\n    setLoading(true);\n\n    sendApiRequest({\n      path: `/portal/jobs/apply/check-existance`,\n      method: 'POST',\n      data: {\n        jobId,\n        email: e.target.value,\n      },\n    })\n      .then((response) => {\n        setLoading(false);\n        setAlreadyApplied(response);\n\n        if (response.exists) {\n          notify('You have already applied for this job');\n        }\n      })\n      .catch((e) => {\n        setLoading(false);\n        notify(e.message);\n      });\n  }, 1000);\n\n  const renderContent = () => {\n    if (showThanksForm) {\n      return (\n        <div style={{ fontSize: '20px' }}>\n          Thank you for taking the time to submit your application for the {job.title} role at{' '}\n          {company.name}. We have received your application and appreciate your interest in joining\n          our team. Rest assured that we will carefully review your qualifications and experience.\n          If your skills match our current needs, we will contact you to discuss the next steps in\n          the hiring process. Once again, thank you for considering a career with us.\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {isLoading ? <LinearProgress /> : null}\n        <h3>SUBMIT YOUR APPLICATION</h3>\n        <FormControl fullWidth variant=\"outlined\" required>\n          <FormLabel>Resume/CV</FormLabel>\n          <input type=\"file\" id=\"resume\" onChange={uploadFile} />\n\n          <label htmlFor=\"resume\" className=\"custom-file-label\">\n            <AttachFileIcon />\n            ATTACH RESUME/CV\n          </label>\n          <span style={{ fontSize: '12px', color: '#666' }}>Maximum file size: 5MB</span>\n          <a href={readFile(resume)} target=\"__blank\" style={{ marginLeft: '10px' }}>\n            {fileName}\n          </a>\n\n          {isUploading ? (\n            <CircularProgress style={{ position: 'absolute', left: '250px' }} />\n          ) : null}\n        </FormControl>\n        <br /> <br />\n        <FormControl fullWidth required>\n          <FormLabel>Full name</FormLabel>\n          <TextField onChange={(e) => setFullName(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <FormControl fullWidth required>\n          <FormLabel>Email</FormLabel>\n          <TextField type=\"email\" onChange={onChangeEmail} />\n        </FormControl>\n        {isAlreadyApplied ? (\n          <span style={{ color: 'red' }}>\n            You have already submitted an application with this email address.\n          </span>\n        ) : null}\n        <br /> <br />\n        <FormControl fullWidth required>\n          <FormLabel>Phone</FormLabel>\n          <TextField onChange={(e) => setPhone(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <FormControl fullWidth>\n          <FormLabel>Current location</FormLabel>\n          <TextField onChange={(e) => setCurrentLocation(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <FormControl fullWidth>\n          <FormLabel>Current company</FormLabel>\n          <TextField onChange={(e) => setCurrentCompany(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <h4>LINKS</h4>\n        <FormControl fullWidth>\n          <FormLabel>LinkedIn URL</FormLabel>\n          <TextField onChange={(e) => setLinkedinUrl(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <FormControl fullWidth>\n          <FormLabel>Portfolio/Website URL</FormLabel>\n          <TextField onChange={(e) => setWebsiteUrl(e.target.value)} />\n        </FormControl>\n        <br /> <br />\n        <Button\n          sx={{ float: 'right' }}\n          variant=\"contained\"\n          size=\"large\"\n          onClick={submit}\n          disabled={isLoading || isAlreadyApplied}\n        >\n          Submit application\n        </Button>\n        <div style={{ clear: 'both' }} />\n      </>\n    );\n  };\n\n  return (\n    <div id=\"portal-job\">\n      <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={metaDescription} />\n        <script type=\"application/ld+json\">{JSON.stringify(ldJson)}</script>\n      </Head>\n\n      <Container sx={{ marginTop: '20px' }}>\n        <Box sx={{ color: '#515357' }}>\n          <img src={company.logo} style={{ maxHeight: '80px' }} />\n\n          <h1>{job.title}</h1>\n\n          <div>\n            <strong>{job.location}</strong>\n          </div>\n\n          <div>\n            <strong>{job.locationType}</strong>\n          </div>\n        </Box>\n      </Container>\n\n      <Box bgcolor=\"#f9f9f9\" sx={{ color: '#515357', padding: '10px 20px', margin: '40px 0px' }}>\n        <Container>\n          <Box\n            sx={{\n              width: {\n                xs: '100%',\n                sm: '75%',\n              },\n            }}\n            className=\"apply-form\"\n          >\n            {renderContent()}\n          </Box>\n        </Container>\n      </Box>\n    </div>\n  );\n};\n\nexport default Apply;\n","import Head from 'next/head';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport { useRouter } from 'next/router';\nimport { Box, Button, Container, LinearProgress } from '@mui/material';\nimport { sendApiRequest, getUrlApp } from '../../../../lib/api/public';\nimport Custom404 from '../../../../components/common/Custom404';\nimport Apply from '../../../../components/job/Apply';\n\nexport async function getServerSideProps(context) {\n  const { jobId, organizationId } = context.query;\n\n  let response;\n  let organizationResponse;\n\n  try {\n    response = await sendApiRequest({\n      path: `/portal/job-detail?jobId=${jobId}`,\n      method: 'GET',\n    });\n\n    organizationResponse = await sendApiRequest({\n      path: `/portal/organization-detail?_id=${organizationId}`,\n      method: 'GET',\n    });\n  } catch (e) {\n    return {\n      props: {\n        initialJob: null,\n        initialOrganization: null,\n      },\n    };\n  }\n\n  if (!response.error) {\n    return {\n      props: {\n        initialJob: response,\n        initialOrganization: organizationResponse,\n      },\n    };\n  }\n\n  return {\n    props: {\n      initialJob: null,\n      initialOrganization: null,\n    },\n  };\n}\n\nconst Job = ({ initialJob, initialOrganization }: { initialJob: any; initialOrganization: any }) => {\n  const [organization, setOrganization] = useState(initialOrganization);\n  const [job, setJob] = useState(initialJob);\n  const [isLoading, setLoading] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  const router = useRouter();\n  const { jobId, organizationId } = router.query;\n\n  const getJob = () => {\n    if (!jobId) {\n      return;\n    }\n\n    setLoading(true);\n\n    sendApiRequest({\n      path: `/portal/job-detail?jobId=${jobId}`,\n      method: 'GET',\n    })\n      .then((response: any) => {\n        setLoading(false);\n\n        if (!response.error) {\n          setJob(response);\n        }\n      })\n      .catch((e) => {\n        if (e.message.includes('Job not found')) {\n          setNotFound(true);\n        }\n\n        setLoading(false);\n        setJob(null);\n      });\n\n    sendApiRequest({\n      path: `/portal/organization-detail?_id=${organizationId}`,\n      method: 'GET',\n    })\n      .then((response: any) => {\n        setLoading(false);\n\n        if (!response.error) {\n          setOrganization(response);\n        }\n      })\n      .catch(() => {\n        setLoading(false);\n        setOrganization(null);\n      });\n  };\n\n  useEffect(() => {\n    getJob();\n  }, [jobId]);\n\n  if (notFound) {\n    return <Custom404 />;\n  }\n\n  if (!job) {\n    return null;\n  }\n\n  const es = job.estimatedSalary || {};\n  const minSalary = es.minValue;\n  const maxSalary = es.maxValue;\n\n  let metaDescription = `${job.title} at ${organization.name}`;\n\n  if (job.location) {\n    metaDescription += `, ${job.location}`;\n  }\n\n  if (job.datePosted) {\n    metaDescription += `, ${job.datePosted}`;\n  }\n\n  if (minSalary && maxSalary) {\n    metaDescription += `, ${minSalary}$ - ${maxSalary}$`;\n  }\n\n  const title = `${job.title} at ${organization.name}`;\n\n  let ldJson: any;\n\n  if (job) {\n    ldJson = {\n      '@context': 'https://schema.org/',\n      '@type': 'JobPosting',\n      title: job.title,\n      description: job.description,\n      datePosted: moment(job.createdAt).toISOString(),\n      hiringOrganization: {\n        '@type': 'Organization',\n        name: organization.name,\n        sameAs: organization.website,\n        logo: organization.logo,\n      },\n      jobLocation: {\n        '@type': 'Place',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: job.location,\n          addressRegion: job.state,\n          addressCountry: 'US',\n        },\n      },\n      estimatedSalary: {\n        '@type': 'MonetaryAmount',\n        name: 'base',\n        currency: 'USD',\n        minValue: parseInt(((minSalary || 0) + '000') as string, 10),\n        maxValue: parseInt(((maxSalary || 0) + '000') as string, 10),\n      },\n    };\n  }\n\n  if (router.query.apply) {\n    return (\n      <Apply\n        title={title}\n        metaDescription={metaDescription}\n        ldJson={ldJson}\n        job={job}\n        company={organization}\n      />\n    );\n  }\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  return (\n    <div id=\"portal-jobs\">\n      <Head>\n        <title>{title} </title>\n        <meta name=\"description\" content={metaDescription} />\n        <script type=\"application/ld+json\">{JSON.stringify(ldJson)}</script>\n      </Head>\n\n      {isLoading ? <LinearProgress /> : null}\n\n      <div className=\"navbar\">\n        <Container>\n          <div style={{ display: 'flex' }}>\n            <LanguageIcon />\n\n            <Link\n              href={organization.website}\n              style={{ textDecoration: 'none', marginLeft: '5px' }}\n              target=\"_blank\"\n              className=\"blue-link\"\n            >\n              Visit our website\n            </Link>\n          </div>\n        </Container>\n      </div>\n\n      <div className=\"header\">\n        <h1>Jobs at {organization.name}</h1>\n      </div>\n\n      <Container sx={{ marginTop: '20px', color: '#515357' }}>\n        <Link href={`${getUrlApp()}/${organizationId}/carreers`} className=\"blue-link\">\n          View all jobs\n        </Link>\n\n        <h1 className=\"title\">{job.title}</h1>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          href={`?apply=1`}\n          target=\"_blank\"\n          sx={{ float: 'right' }}\n        >\n          Apply for this job\n        </Button>\n\n        <div>\n          <strong>{job.location}</strong>\n        </div>\n\n        <div>\n          <strong>{job.locationType}</strong>\n        </div>\n      </Container>\n\n      <Box bgcolor=\"#f9f9f9\" sx={{ padding: '40px 20px', margin: '40px 0px', color: '#515357' }}>\n        <Container>\n          <div dangerouslySetInnerHTML={{ __html: job.description }} />\n\n          <div>\n            {minSalary && maxSalary ? (\n              <div>\n                {formatter.format(minSalary)} - {formatter.format(maxSalary)} USD/year\n              </div>\n            ) : null}\n          </div>\n        </Container>\n      </Box>\n    </div>\n  );\n};\n\nexport default Job;\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","style","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","jsxs","lineHeight","h1","borderRight","margin","paddingRight","fontSize","fontWeight","verticalAlign","h2","notify","obj","openSnackbarExternal","message","toString","job_Apply","title","metaDescription","ldJson","job","company","param","showThanksForm","setShowThanksForm","useState","isLoading","setLoading","isAlreadyApplied","setAlreadyApplied","isUploading","setUploading","resume","setResume","fileName","setFileName","fullName","setFullName","email","setEmail","phone","setPhone","currentLocation","setCurrentLocation","currentCompany","setCurrentCompany","linkedinUrl","setLinkedinUrl","websiteUrl","setWebsiteUrl","jobId","router","useRouter","query","onChangeEmail","debounce","e","target","value","sendApiRequest","path","method","data","then","response","exists","catch","jsx_runtime","id","Head","meta","name","content","script","type","JSON","stringify","Container","sx","marginTop","Box","color","img","src","logo","maxHeight","strong","location","locationType","bgcolor","padding","width","xs","sm","className","Fragment","LinearProgress","h3","FormControl","fullWidth","variant","required","FormLabel","input","onChange","file","files","size","formData","FormData","append","uploadFileRequest","json","result","console","error","label","htmlFor","AttachFileIcon","span","a","href","readFile","marginLeft","CircularProgress","position","left","br","TextField","h4","Button","float","onClick","jobTitle","disabled","clear","_jobId_","initialJob","initialOrganization","organization","setOrganization","setJob","notFound","setNotFound","organizationId","getJob","concat","includes","useEffect","Custom404","es","estimatedSalary","minSalary","minValue","maxSalary","maxValue","datePosted","description","moment","createdAt","toISOString","hiringOrganization","sameAs","website","jobLocation","address","addressLocality","addressRegion","state","addressCountry","currency","parseInt","apply","Apply","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","LanguageIcon","Link","textDecoration","getUrlApp","dangerouslySetInnerHTML","__html","format"],"sourceRoot":""}