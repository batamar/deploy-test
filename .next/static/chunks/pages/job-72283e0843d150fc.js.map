{"version":3,"file":"static/chunks/pages/job-72283e0843d150fc.js","mappings":"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","sources":["webpack://_N_E/?569f","webpack://_N_E/./pages/job.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/job\",\n      function () {\n        return require(\"private-next-pages/job.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/job\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport AuthLayout from '../components/AuthLayout';\nimport { Paper, Grid } from '@mui/material';\nimport { sendApiRequest } from '../lib/api/public';\nimport Candidates from '../components/jobDetail/Candidates';\nimport Feed from '../components/jobDetail/Feed';\nimport PrimaryInfo from 'components/jobDetail/PrimaryInfo';\nimport Notes from '../components/jobDetail/Notes';\nimport Description from '../components/jobDetail/Description';\nimport SendEmail from '../components/SendEmail';\n\nconst Job = () => {\n  const router = useRouter();\n\n  const [feedUpdateHash, setFeedUpdateHash] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [job, setJob] = useState<any>();\n\n  const getJob = () => {\n    if (router.isReady) {\n      const { query } = router;\n\n      setLoading(true);\n\n      sendApiRequest({\n        path: `/jobs/detail?_id=${query.id}`,\n        method: 'GET',\n      }).then((response: any) => {\n        setLoading(false);\n\n        if (!response.error) {\n          setJob(response);\n        }\n      })\n    }\n  }\n\n  const { id } = router.query;\n\n  useEffect(() => {\n    getJob();\n  }, [id])\n\n  if (!job) {\n    return <AuthLayout title={''} isLoading={isLoading}>{' '}</AuthLayout>\n  }\n\n  const paperStyle = { padding: '10px 20px', marginBottom: '20px', marginRight: '10px' }\n\n  return (\n    <AuthLayout title={job.title} isLoading={isLoading}>\n      <Grid container flexDirection=\"row\">\n        <Grid item flex={1}>\n          <Paper sx={paperStyle}>\n            <h3>Details</h3>\n\n            <br />\n\n            <PrimaryInfo job={job} onChange={() => {\n              getJob();\n            }} />\n\n          </Paper>\n\n          <Paper sx={{ ...paperStyle, height: '400px' }}>\n            <Description job={job} onChange={() => {\n              getJob();\n            }} />\n          </Paper>\n\n          <Paper sx={{ ...paperStyle, height: '400px' }}>\n            <Notes job={job} onChange={() => {\n              getJob();\n            }} />\n          </Paper>\n\n          <Paper sx={paperStyle}>\n            <h3>Send Email</h3>\n\n            <br />\n\n            <SendEmail\n              jobId={job._id}\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item flex={1}>\n          <Paper sx={paperStyle}>\n            <h3>Feed</h3>\n\n            <Feed jobId={job._id} updateHash={feedUpdateHash} />\n          </Paper>\n        </Grid>\n\n      </Grid>\n\n      <Paper sx={paperStyle}>\n        <Candidates job={job} onChange={() => {\n              setFeedUpdateHash(Math.random().toString())\n        }} />\n      </Paper>\n\n    </AuthLayout>\n  );\n};\n\nexport default Job;"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","router","useRouter","feedUpdateHash","setFeedUpdateHash","useState","isLoading","setLoading","job","setJob","getJob","isReady","query","sendApiRequest","path","concat","id","method","then","response","error","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","AuthLayout","title","paperStyle","padding","marginBottom","marginRight","jsxs","Grid","container","flexDirection","item","flex","Paper","sx","h3","br","PrimaryInfo","onChange","height","Description","Notes","SendEmail","jobId","_id","Feed","updateHash","Candidates","Math","random","toString"],"sourceRoot":""}