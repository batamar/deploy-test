{"version":3,"file":"static/chunks/2724-6103eba358f638ef.js","mappings":"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","sources":["webpack://_N_E/./components/common/DeleteButton.tsx","webpack://_N_E/./components/common/Uploader.tsx","webpack://_N_E/./components/utils.tsx","webpack://_N_E/./lib/notify.ts","webpack://_N_E/./pages/settings/OrganizationSettingsForm.tsx","webpack://_N_E/./pages/settings/PaymentMethodForm.tsx","webpack://_N_E/./pages/settings/UserForm.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@mui/icons-material/Cancel';\n\ntype Props = {\n    onClick: () => void;\n};\n\nconst DeleteButton = ({ onClick }: Props) => {\n    const [hover, setHover] = useState(false);\n\n    return (\n        <DeleteIcon style={{ cursor: 'pointer', color: hover ? '#dc5e7f' : '#f2a1b6' }} onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} onClick={onClick} />\n    )\n};\n\nexport default DeleteButton;","import React, { useState } from 'react';\nimport { readFile, uploadFileRequest } from '../../lib/api/public';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Table } from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport DeleteButton from './DeleteButton';\n\ntype File = {\n  name?: string;\n  url: string;\n  date?: Date;\n}\n\ntype Props = {\n    label: string;\n    onChange: (results: any) => void;\n    multiple?;\n    showList?: boolean;\n    defaultFiles?: File[];\n};\n\nconst Uploader = ({ label, onChange, multiple=true, showList=true, defaultFiles }: Props) => {\n    const [isUploading, setUploading] = useState(false);\n    const [results, setResults] = useState(defaultFiles || []);\n\n    const uploadFile = (e) => {\n        const files = e.target.files;\n\n        for (const file of files) {\n            const formData = new FormData();\n            formData.append('file', file);\n\n            setUploading(true);\n\n            uploadFileRequest(formData)\n                .then((response) => {\n                    setUploading(false);\n\n                    response\n                        .json()\n                        .then(({ result }) => {\n                            results.push({\n                                url: result,\n                                date: new Date(),\n                                name: file.name\n                            });\n\n                            setResults([...results]);\n\n                            if (files.length === results.length) {\n                                if (multiple) {\n                                    onChange(results);\n                                } else {\n                                    onChange(results[0]);\n                                }\n                            }\n                        })\n                        .catch((error) => {\n                            console.error(error.message);\n                        });\n                })\n                .catch((error) => {\n                    setUploading(false);\n                    console.error(error.message);\n                });\n        }\n    }\n\n    const removeResult = (result: File) => {\n        const newResults = results.filter(r => r.url !== result.url);\n\n        setResults(newResults);\n\n        if (multiple) {\n            onChange(newResults);\n        } else {\n            onChange(newResults[0]);\n        }\n    }\n\n    const renderList = () => {\n        if (!showList) {\n            return null;\n        }\n\n        return (\n            <>\n                {results.length > 0 ? (<><br /><br /></>) : null}\n\n                <Table>\n                    {results.map((result) => {\n                        return (\n                            <div style={{ display: 'flex' }}>\n                                <DeleteButton onClick={() => removeResult(result)} />\n                                <a href={readFile(result.url)} target='__blank'>{result.name}</a>\n                            </div>\n                        );\n                    })}\n                </Table>\n            </>\n        )\n    }\n\n    return (\n        <div style={{ position: 'relative', display: 'inline-block' }}>\n            <input type='file' id={`uploader-${label}`} onChange={uploadFile} style={{ display: 'none' }} multiple={multiple} />\n\n            <label\n                htmlFor={`uploader-${label}`}\n                style={{\n                    padding: '10px 35px',\n                    borderRadius: '5px',\n                    width: '215px !important',\n                    cursor: 'pointer',\n                    background: '#ebecf0',\n                    color: '#4f4f51',\n                    border: '1px solid #dfe0e4',\n                    position: 'relative',\n                }}\n            >\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        height: '20px',\n                        left: '5px',\n                        top: '10px'\n                    }}\n                >\n                 {isUploading ? <CircularProgress size={20} /> : <AttachFileIcon />}\n                </div>\n\n                {label}\n            </label>\n\n            {renderList()}\n        </div>\n    )\n};\n\nexport default Uploader;","import { Pagination, FormLabel, Grid } from '@mui/material';\n\nexport const renderField = ({ label, renderControl, isCompact=false, required=false }: { label: string, renderControl: () => React.ReactNode, isCompact?: boolean, required?: boolean }) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={isCompact ? 1 : 1} id={`label-${label}`}>\n                    <FormLabel sx={{ color: '#000', fontWeight: 'bold' }} required={required}>{label}</FormLabel>\n                </Grid>\n                <Grid item flex={isCompact ? 6 : 4}>\n                    {renderControl()}\n                </Grid>\n            </Grid>\n\n            <br />\n            <br />\n        </>\n    )\n}\n\nexport const renderPagination = ({ router, totalCount, page, extraQueryParams={} }) => {\n    const handlePageChange = (event, value) => {\n        router.push({\n            query: { page: value, ...extraQueryParams },\n        });\n    };\n\n    return (\n        <Pagination\n            count={Math.ceil(totalCount / 10)}\n            page={parseInt(page, 10)}\n            onChange={handlePageChange}\n            color=\"primary\"\n            sx={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}\n        />\n    )\n}\n\nconst capitalize = (string) => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport const renderJobStatus = (job) => {\n    let backgroundColor = 'inherit';\n    let color = '#fff';\n\n    if (job.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    if (job.status === 'lead') {\n        backgroundColor = 'rgb(251, 249, 185)';\n        color = '#000';\n    }\n\n    if (['onHold', 'canceled', 'closed'].includes(job.status)) {\n        backgroundColor = 'rgb(200, 105, 80)';\n    }\n\n    if (job.status === 'filled') {\n        backgroundColor = 'rgb(221, 160, 221)';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(job.status)}</span>\n}\n\nexport const renderClientStatus = (client) => {\n    let backgroundColor = '#FA8072';\n    let color = '#fff';\n\n    if (!client.status) {\n        client.status = 'active';\n    }\n\n    if (client.status === 'active') {\n        backgroundColor = '#4a6cbd';\n    }\n\n    return <span style={{ borderRadius: '5px', backgroundColor, color, width: '90px', padding: '2px 4px' }}>{capitalize(client.status)}</span>\n}\n\nexport const renderDetailItem = (label: string, value) => {\n    return (\n        <>\n            <Grid container>\n                <Grid item flex={3} id={`label-${label}`}>\n                    {label}\n                </Grid>\n                <Grid item flex={4}>\n                    {value}\n                </Grid>\n            </Grid>\n\n            <br />\n        </>\n    )\n}","import { openSnackbarExternal } from '../components/common/Notifier';\n\nexport default function notify(obj) {\n  openSnackbarExternal({ message: obj.message || obj.toString() });\n}\n","import React, { useEffect, useState } from 'react';\nimport { kebabCase } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { sendApiRequest, readFile } from 'lib/api/public';\nimport { Box, TextField, Button, Typography, LinearProgress, Avatar } from '@mui/material';\nimport notify from 'lib/notify';\nimport { getUrlApp } from 'lib/api/public';\nimport { renderField } from '../../components/utils';\nimport Uploader from '../../components/common/Uploader';\n\nconst host = getUrlApp().replace('https://', '').replace('http://', '').replace('www.', '');\n\nconst OrganizationSettingsForm = ({ requireSubdomain = false }: { requireSubdomain?: boolean }) => {\n    const router = useRouter();\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [organization, setOrganization] = useState(null);\n    const [subdomain, setSubdomain] = useState(null);\n    const [isSubdomainAvailable, setIsSubdomainAvailable] = useState(true);\n\n    const fetchOrganization = async () => {\n        try {\n            const response = await sendApiRequest({\n                path: '/organization',\n                method: 'GET',\n            });\n\n            setOrganization(response);\n            setSubdomain(response.subdomain);\n\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n        }\n    };\n\n    const checkSubdomainAvailability = async (value) => {\n        try {\n            const response = await sendApiRequest({\n                path: `/organization/check-subdomain`,\n                method: 'POST',\n                data: {\n                    subdomain: value,\n                },\n            });\n\n            setIsSubdomainAvailable(response);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchOrganization();\n    }, []);\n\n    const onChange = (key, value) => {\n        setOrganization({ ...organization, [key]: value });\n    };\n\n    const onChangeName = (e) => {\n        const name = e.target.value;\n        setOrganization({ ...organization, name: name });\n    }\n\n    const onBlurName = (e) => {\n        const name = e.target.value;\n        \n        if (!subdomain) {\n            const newSubdomain = kebabCase(name);\n            setSubdomain(newSubdomain);\n            setSubdomain(newSubdomain); checkSubdomainAvailability(newSubdomain);\n        }\n    }\n\n    const onSubdomainChange = (e) => {\n        const subdomain = e.target.value;\n\n        setSubdomain(subdomain);\n        checkSubdomainAvailability(subdomain);\n    }\n\n    const onSubmit = async () => {\n        if (!isSubdomainAvailable) {\n            notify('Subdomain is not available');\n            return;\n        }\n\n        if (!organization.name) {\n            notify('Name is required');\n            return;\n        }\n\n        if (requireSubdomain && !subdomain) {\n            notify('Subdomain is required');\n            return;\n        }\n\n        try {\n            setIsSubmitting(true);\n\n            await sendApiRequest({\n                path: '/organization',\n                method: 'POST',\n                data: {\n                    name: organization.name,\n                    website: organization.website,\n                    subdomain: isSubdomainAvailable ? subdomain : null,\n                    logo: organization.logo,\n                },\n            });\n\n            setIsSubmitting(false);\n\n            if (subdomain) {\n                notify('You will be logged out and redirected to the new subdomain.');\n\n                setTimeout(() => {\n                    router.push(`/auth/logout?subdomain=${subdomain}`);\n                }, 3000);\n            } else {\n                notify('Organization updated successfully');\n            }\n        } catch (error) {\n            setIsSubmitting(false);\n            notify(error.message);\n        }\n    };\n\n    if (isLoading || !organization) return <LinearProgress />;\n\n    return (\n        <>\n            {renderField({\n                label: 'Name',\n                required: true,\n                renderControl: () => <TextField fullWidth value={organization.name} onChange={onChangeName} onBlur={onBlurName} />,\n            })}\n\n            {renderField({\n                label: 'Subdomain',\n                required: requireSubdomain,\n                renderControl: () => {\n                    return (\n                        <>\n                            <TextField fullWidth onChange={onSubdomainChange} value={subdomain} />\n                            <Typography variant='caption'>{`https://${subdomain || ''}${subdomain ? '.' : ''}${host}`}</Typography>\n\n                            <Box>\n                                {!isSubdomainAvailable && <Typography variant='caption' color='red'>Subdomain is not available</Typography>}\n                            </Box>\n                        </>\n                    )\n                }\n            })}\n\n            {renderField({\n                label: 'Website',\n                renderControl: () => <TextField fullWidth onChange={(e) => onChange('website', e.target.value)} value={organization?.website} />,\n            })}\n\n            {renderField({\n                label: 'Logo', renderControl: () => {\n                    const logo = organization.logo;\n\n                    return (\n                        <>\n                            { logo &&\n\n                            (\n                                <>\n                                    <Avatar src={readFile(logo)} alt=\"Logo\" />\n                                    <br />\n                                    <br />\n                                </>\n                            )}\n\n                            <Uploader\n                                label=\"Upload\"\n                                multiple={false}\n                                defaultFiles={logo ? [{ name: logo, url: logo }] : []} onChange={(result) => {\n\n                                    if (result) {\n                                        setOrganization({ ...organization, logo: result.url });\n                                    } else {\n                                        setOrganization({ ...organization, logo: null });\n                                    }\n                                }} />\n                        </>\n                    );\n                }\n            })}\n\n            <Button style={{ float: 'right', marginTop: '-20px' }} color='primary' variant='contained' onClick={onSubmit} disabled={isLoading || !isSubdomainAvailable || isSubmitting}>\n                {isSubmitting ? 'Saving...' : 'Save'}\n            </Button>\n        </>\n    )\n};\n\nexport default OrganizationSettingsForm;","import React, { useState, useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { sendApiRequest } from 'lib/api/public';\nimport notify from 'lib/notify';\n\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY);\n\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\ntype Props = {\n    afterFetch?: (response: any) => void,\n    onSuccess?: (response: any) => void,\n}\n\nconst CheckoutForm = ({ afterFetch, onSuccess }: Props) => {\n    const [isSaving, setIsSaving] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [paymentInfo, setPaymentInfo] = useState(null);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const fetchPaymentInfo = async () => {\n        setIsLoading(true);\n\n        try {\n            const response = await sendApiRequest({\n                path: '/payment-info',\n                method: 'GET',\n            });\n\n            setPaymentInfo(response);\n\n            if (afterFetch) {\n                afterFetch(response);\n            }\n\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n            notify(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchPaymentInfo();\n    }, []);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            return;\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement),\n        });\n\n        if (error) {\n            notify(error);\n        } else {\n            try {\n                setIsSaving(true);\n\n                const response = await sendApiRequest({\n                    path: '/save-payment-method',\n                    method: 'POST',\n                    data: {\n                        paymentMethod,\n                    }\n                });\n\n                notify('Payment method saved');\n\n                setPaymentInfo(response);\n\n                if (onSuccess) {\n                    onSuccess(response);\n                }\n\n                setIsSaving(false);\n            } catch (error) {\n                setIsSaving(false);\n                notify(error);\n            }\n        }\n    };\n\n    if (isLoading || !paymentInfo) {\n        return null;\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <CardElement className=\"StripeElement\" />\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!stripe || isSaving}>\n                {paymentInfo.paymentMethodId ? 'Update' : 'Add'} payment method\n            </Button>\n        </form>\n    );\n};\n\nfunction PaymentMethodForm({ onSuccess, afterFetch }: Props) {\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutForm onSuccess={onSuccess} afterFetch={afterFetch} />\n        </Elements>\n    );\n}\n\nexport default PaymentMethodForm;\n","import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Dialog,\n    LinearProgress,\n    DialogContent,\n    DialogTitle,\n    Alert,\n    IconButton,\n    TextField,\n    Select,\n    MenuItem\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport notify from 'lib/notify';\nimport { sendApiRequest } from 'lib/api/public';\nimport { renderField } from '../../components/utils';\nimport OrganizationSettingsForm from './OrganizationSettingsForm';\nimport PaymentMethodForm from './PaymentMethodForm';\n\ntype Props = {\n    onClose: () => void;\n    onSuccess: () => void;\n    open: boolean;\n    user?: {\n        _id: string,\n        firstName: string;\n        lastName: string;\n        title: string,\n        email: string,\n        role: string,\n        phone: string,\n    }\n};\n\nconst UserForm = ({ open, onClose, onSuccess, user }: Props) => {\n    const userO = user || { _id: null, firstName: '', lastName: '', title: '', email: '', role: '', phone: '' };\n    const [paymentInfo, setPaymentInfo] = useState(null);\n    const [organization, setOrganization] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [firstName, setFirstName] = useState(userO.firstName);\n    const [lastName, setLastName] = useState(userO.lastName);\n    const [title, setTitle] = useState(userO.title);\n    const [email, setEmail] = useState(userO.email);\n    const [phone, setPhone] = useState(userO.phone);\n    const [role, setRole] = useState(userO.role);\n    const [saving, setSaving] = useState(false);\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const fetchOrganization = async () => {\n        setIsLoading(true);\n\n        try {\n            const response = await sendApiRequest({\n                path: '/organization',\n                method: 'GET',\n            });\n\n            setOrganization(response);\n\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchOrganization();\n    }, []);\n\n    const onSave = async () => {\n        if (!email || !password || !passwordConfirm) {\n            notify('Please fill in all required fields');\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await sendApiRequest({\n                path: '/users/manage',\n                method: 'POST',\n                data: {\n                    _id: userO._id,\n                    firstName,\n                    lastName,\n                    title,\n                    email,\n                    role,\n                    phone,\n                    password,\n                    passwordConfirm\n                }\n            });\n\n            onSuccess();\n\n            setSaving(false);\n        } catch (error) {\n            setSaving(false);\n            notify(error);\n        }\n\n    };\n\n    const renderSingleField = (value: string, label: string, onChange, type?: string, required?: boolean) => {\n        return (\n            <>\n                {renderField({ label, required, renderControl: () => {\n                    return <TextField fullWidth value={value} onChange={(e) => onChange(e.target.value)} type={type} />\n                }})}\n            </>\n        )\n    }\n\n    const renderPaymentInfo = () => {\n        if (!paymentInfo) {\n            return (\n                <PaymentMethodForm\n                    afterFetch={(response) => {\n                        setPaymentInfo(response);\n                    }}\n\n                    onSuccess={(response) => {\n                        setPaymentInfo(response);\n                    }}\n                />\n            );\n        }\n\n        if (!paymentInfo.paymentMethodId) {\n            return (\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                    <Alert severity=\"warning\">\n                        Please add your payment method to continue\n                    </Alert>\n\n                    <br />\n\n                    <PaymentMethodForm\n                        afterFetch={(response) => {\n                            setPaymentInfo(response);\n                        }}\n\n                        onSuccess={(response) => {\n                            setPaymentInfo(response);\n                        }}\n                    />\n\n                    <br />\n                    <br />\n                </Box>\n            );\n        }\n\n        return (\n            <>\n                {\n                    !userO._id ?\n                        <>\n                            <Alert severity=\"warning\">\n                                Adding a user will cost an additional $99 per month\n                            </Alert>\n\n                            <br />\n                        </>\n                        : null\n                }\n            </>\n        )\n    }\n\n    const renderContent = () => {\n        if (!organization.subdomain && !userO._id) {\n            return (\n                <>\n                    <Alert severity=\"warning\">\n                        Please configure your organization name and subdomain to continue\n                    </Alert>\n\n                    <br />\n\n                    <OrganizationSettingsForm\n                        requireSubdomain={true}\n                    />\n                </>\n            );\n        }\n\n        return (\n            <>\n                {isLoading || saving || !paymentInfo ? <LinearProgress /> : null}\n                <br />\n\n                {renderPaymentInfo()}\n\n                {renderSingleField(firstName, 'First name', setFirstName)}\n                {renderSingleField(lastName, 'Last name', setLastName)}\n                {renderSingleField(title, 'Title', setTitle)}\n                {renderSingleField(email, 'Email', setEmail, 'email', true)}\n                {renderSingleField(phone, 'Phone', setPhone)}\n\n                {\n                    renderField({\n                        label: 'Role', renderControl: () => {\n                            return (\n                                <Select value={role} onChange={(e) => setRole(e.target.value)} fullWidth>\n                                    <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n                                    <MenuItem value=\"admin\">Admin (No billing access)</MenuItem>\n                                    <MenuItem value=\"superAdmin\">Admin</MenuItem>\n                                </Select>\n                            )\n                        }\n                    })\n                }\n\n                {\n                    !user || !user._id ?\n                        <>\n                            {renderSingleField(password, 'Password', setPassword, 'password', true)}\n                            {renderSingleField(passwordConfirm, 'Password confirm', setPasswordConfirm, 'password', true)}\n                        </>\n                        : null\n                }\n            </>\n        )\n    }\n\n    const renderSaveButton = () => {\n        if (!organization.subdomain) {\n            return null;\n        }\n\n        return (\n            <Button variant=\"contained\" color=\"success\" onClick={onSave} disabled={isDisabled}>\n                Save\n            </Button>\n        )\n    }\n\n    if (!organization) {\n        return null;\n    }\n\n    const isDisabled = saving || !paymentInfo || !paymentInfo.paymentMethodId;\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"modal-title\" open={open} fullScreen style={{ width: '40%', left: 'inherit' }}>\n            <DialogTitle id=\"modal-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{ userO._id ? 'Edit user' : 'Create a new user'}</Box>\n                    <Box>\n                        <IconButton onClick={onClose}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        {renderSaveButton()}\n                    </Box>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent style={{ backgroundColor: '#f8f8f8' }}>\n                {renderContent()}\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default UserForm;\n"],"names":["__webpack_exports__","Z","onClick","param","hover","setHover","useState","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DeleteIcon","style","cursor","color","onMouseOver","onMouseLeave","label","onChange","multiple","showList","defaultFiles","isUploading","setUploading","results","setResults","removeResult","newResults","filter","r","url","result","jsxs","div","position","display","input","type","id","concat","files","e","target","file","formData","FormData","append","uploadFileRequest","then","response","json","push","date","Date","name","length","catch","console","error","message","htmlFor","padding","borderRadius","width","background","border","height","left","top","CircularProgress","size","AttachFileIcon","Fragment","br","Table","map","DeleteButton","a","href","readFile","renderField","renderControl","isCompact","required","Grid","container","item","flex","FormLabel","sx","fontWeight","renderPagination","router","totalCount","page","extraQueryParams","Pagination","count","Math","ceil","parseInt","event","value","query","marginTop","justifyContent","capitalize","string","charAt","toUpperCase","slice","toLowerCase","renderJobStatus","backgroundColor","job","status","includes","span","renderClientStatus","client","renderDetailItem","notify","obj","openSnackbarExternal","toString","host","getUrlApp","replace","requireSubdomain","useRouter","isLoading","setIsLoading","isSubmitting","setIsSubmitting","organization","setOrganization","subdomain","setSubdomain","isSubdomainAvailable","setIsSubdomainAvailable","fetchOrganization","sendApiRequest","path","method","checkSubdomainAvailability","data","useEffect","key","onChangeName","onBlurName","newSubdomain","kebabCase","onSubdomainChange","onSubmit","website","logo","setTimeout","LinearProgress","TextField","fullWidth","onBlur","Typography","variant","Box","Avatar","src","alt","Uploader","Button","float","disabled","stripePromise","loadStripe","process","CheckoutForm","afterFetch","onSuccess","isSaving","setIsSaving","paymentInfo","setPaymentInfo","stripe","useStripe","elements","useElements","fetchPaymentInfo","handleSubmit","preventDefault","paymentMethod","createPaymentMethod","card","getElement","CardElement","form","className","paymentMethodId","Elements","open","onClose","user","userO","_id","firstName","lastName","title","email","role","phone","setFirstName","setLastName","setTitle","setEmail","setPhone","setRole","saving","setSaving","password","setPassword","passwordConfirm","setPasswordConfirm","onSave","renderSingleField","isDisabled","Dialog","aria-labelledby","fullScreen","DialogTitle","alignItems","flexGrow","IconButton","CloseIcon","DialogContent","Alert","severity","flexDirection","PaymentMethodForm","Select","MenuItem","OrganizationSettingsForm"],"sourceRoot":""}